{"version":3,"sources":["components/navbar/Sidebar.js","components/misc/Button.js","constants/userConstants.js","actions/userActions.js","components/navbar/SearchBar.js","components/loader/Loader.js","constants/passwordConstants.js","components/emptyState/passwordState.js","components/content/PasswordContent.js","actions/passwordActions.js","constants/noteConstants.js","components/emptyState/noteState.js","components/content/NoteContent.js","actions/noteActions.js","components/screens/DashboardScreen.js","components/screens/PasswordScreen.js","components/screens/NoteScreen.js","components/content/AddressContent.js","components/screens/AddressScreen.js","components/modal/AddPasswordModal.js","components/modal/EditPasswordModal.js","components/modal/StandardModal.js","components/modal/DeletePasswordModal.js","components/modal/AddAddressModal.js","components/modal/AddNoteModal.js","components/modal/EditNoteModal.js","components/modal/DeleteNoteModal.js","components/screens/LoginScreen.js","components/screens/RegisterScreen.js","components/screens/NotFoundScreen.js","components/routing/PrivateRoute.js","components/screens/LandingScreen.js","components/navbar/SettingBar.js","components/content/SettingContent.js","components/screens/SettingScreen.js","components/misc/Title.js","components/screens/SearchScreen.js","App.js","store.js","reducers/passwordReducers.js","reducers/noteReducers.js","reducers/userReducers.js","index.js"],"names":["navigation","name","href","icon","HomeIcon","FingerPrintIcon","PaperClipIcon","Sidebar","className","src","alt","map","item","to","isActive","aria-hidden","solutions","link","classNames","classes","filter","Boolean","join","Button","open","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","type","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","login","email","password","dispatch","a","config","headers","axios","post","JSON","stringify","data","payload","localStorage","setItem","response","message","logout","removeItem","document","location","register","toast","error","getUserDetails","id","getState","userInfo","userLogin","Authorization","token","get","userNavigation","SearchBar","useDispatch","useSelector","state","logoutHandler","useState","sidebarOpen","setSidebarOpen","Root","show","onClose","Child","Overlay","onClick","current","action","method","htmlFor","placeholder","Items","Item","active","Loader","PASSWORD_LIST_REQUEST","PASSWORD_LIST_SUCCESS","PASSWORD_LIST_FAIL","PASSWORD_CREATE_REQUEST","PASSWORD_CREATE_SUCCESS","PASSWORD_CREATE_FAIL","PASSWORD_CREATE_RESET","PASSWORD_DELETE_REQUEST","PASSWORD_DELETE_SUCCESS","PASSWORD_DELETE_FAIL","PASSWORD_DELETE_RESET","PASSWORD_UPDATE_REQUEST","PASSWORD_UPDATE_SUCCESS","PASSWORD_UPDATE_FAIL","PASSWORD_UPDATE_RESET","PASSWORD_DETAILS_REQUEST","PASSWORD_DETAILS_SUCCESS","PASSWORD_DETAILS_FAIL","passwordState","fill","viewBox","stroke","vectorEffect","strokeLinecap","strokeLinejoin","strokeWidth","d","PasswordContent","props","passwordList","loading","passwords","useEffect","autoClose","title","length","url","onError","e","target","onerror","username","_id","NOTE_LIST_REQUEST","NOTE_LIST_SUCCESS","NOTE_LIST_FAIL","NOTE_CREATE_REQUEST","NOTE_CREATE_SUCCESS","NOTE_CREATE_FAIL","NOTE_CREATE_RESET","NOTE_DELETE_REQUEST","NOTE_DELETE_SUCCESS","NOTE_DELETE_FAIL","NOTE_DELETE_RESET","NOTE_UPDATE_REQUEST","NOTE_UPDATE_SUCCESS","NOTE_UPDATE_FAIL","NOTE_UPDATE_RESET","NOTE_DETAILS_REQUEST","NOTE_DETAILS_SUCCESS","NOTE_DETAILS_FAIL","noteState","noteList","notes","note","caption","DashboardScreen","NoteContent","AddressContent","required","value","undefined","AddPasswordModal","passwordId","useParams","navigate","useNavigate","setOpen","cancelButtonRef","useRef","passwordCreate","user","userDetails","successCreate","success","createdPassword","passwordDetails","console","log","passwordShown","setPasswordShown","togglePassword","static","initialFocus","onSubmit","values","formData","render","handleSubmit","submitError","component","validate","input","meta","touched","EditPasswordModal","passwordUpdate","sitePassword","put","info","updatePassword","initialValues","Modal","Title","content","actions","passwordIndex","algoliasearch","initIndex","DeletePasswordModal","history","successDelete","passwordDelete","deleteHandler","delete","deletePassword","deleteObject","ref","AddAddressModal","setValue","Date","dateValue","onChange","errors","RegExp","test","autoComplete","defaultCountry","AddNoteModal","noteId","noteCreate","successNoteCreate","createdNote","noteDetails","EditNoteModal","noteUpdate","image","updateNote","DeleteNoteModal","noteDelete","deleteNote","LoginScreen","FORM_ERROR","form","RegisterScreen","password2","password1","NotFound","PrivateRoute","LandingScreen","Group","focus","UsersIcon","FolderIcon","CalendarIcon","InboxIcon","ChartBarIcon","UserCircleIcon","SettingContent","userUpdateProfile","aria-current","updateUserProfile","SettingScreen","SettingBar","searchClient","noteIndex","allPasswords","hit","objectID","allNotes","SearchScreen","setPasswords","setNotes","forEach","fetchPasswords","saveObjects","fetchNotes","InstantSearch","indexName","SearchBox","autoFocus","translations","Index","Hits","hitComponent","App","path","element","AddressScreen","NotFoundScreen","React","Component","reducer","combineReducers","userRegister","userList","users","userDelete","userUpdate","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f0fd9277.chunk.js","sourcesContent":["/** @format */\r\n\r\nimport React from \"react\";\r\nimport {\r\n  HomeIcon,\r\n  // MapIcon,\r\n  FingerPrintIcon,\r\n  PaperClipIcon,\r\n  CogIcon,\r\n} from \"@heroicons/react/outline\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst navigation = [\r\n  { name: \"Dashboard\", href: \"/dashboard\", icon: HomeIcon },\r\n  {\r\n    name: \"Passwords\",\r\n    href: \"/passwords\",\r\n    icon: FingerPrintIcon,\r\n  },\r\n  { name: \"Notes\", href: \"/notes\", icon: PaperClipIcon },\r\n  // { name: \"Addresses\", href: \"/addresses\", icon: MapIcon },\r\n];\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className='flex h-screen overflow-hidden bg-gray-100'>\r\n      {/* Static sidebar for desktop */}\r\n      <div className='hidden md:flex md:flex-shrink-0'>\r\n        <div className='flex flex-col w-64'>\r\n          {/* Sidebar component, swap this element with another sidebar if you like */}\r\n          <div className='flex flex-col flex-grow pt-5 pb-4 overflow-y-auto bg-white border-r border-gray-200'>\r\n            <div className='flex items-center flex-shrink-0 px-4'>\r\n              <img\r\n                className='w-auto h-10 transition-all hover:animate-spin'\r\n                src='https://media.publit.io/file/noun_vault_3097826-2.svg'\r\n                alt='PassMan'\r\n              />\r\n              <span className='text-2xl text-gray-500 uppercase '>PassMan</span>\r\n            </div>\r\n            <div className='flex flex-col flex-grow mt-5'>\r\n              <nav className='flex-1 px-2 space-y-1 bg-white'>\r\n                {navigation.map((item) => (\r\n                  <NavLink\r\n                    key={item.name}\r\n                    to={item.href}\r\n                    className={({ isActive }) =>\r\n                      isActive\r\n                        ? \"bg-yellow-400 flex items-center px-2 py-2 text-sm font-medium text-gray-600 rounded-md group hover:bg-yellow-100 hover:text-gray-900\"\r\n                        : \"flex items-center px-2 py-2 text-sm font-medium text-gray-600 rounded-md group hover:bg-yellow-100 hover:text-gray-900\"\r\n                    }>\r\n                    <item.icon\r\n                      className='flex-shrink-0 w-6 h-6 mr-3'\r\n                      aria-hidden='true'\r\n                    />\r\n                    {item.name}\r\n                  </NavLink>\r\n                ))}\r\n              </nav>\r\n              <nav className='px-2 space-y-1 bg-white'>\r\n                <NavLink\r\n                  to='/setting'\r\n                  className={({ isActive }) =>\r\n                    isActive\r\n                      ? \"bg-yellow-400 flex items-center px-2 py-2 text-sm font-medium text-gray-600 rounded-md group hover:bg-yellow-100 hover:text-gray-900\"\r\n                      : \"flex items-center px-2 py-2 text-sm font-medium text-gray-600 rounded-md group hover:bg-yellow-100 hover:text-gray-900\"\r\n                  }>\r\n                  <CogIcon\r\n                    className='flex-shrink-0 w-6 h-6 mr-3'\r\n                    aria-hidden='true'\r\n                  />\r\n                  Settings\r\n                </NavLink>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","/** @format */\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { PlusSmIcon as PlusSmIconOutline } from \"@heroicons/react/outline\";\r\n\r\nimport { Popover, Transition } from \"@headlessui/react\";\r\n\r\nimport {\r\n  // MapIcon,\r\n  FingerPrintIcon,\r\n  PaperClipIcon,\r\n} from \"@heroicons/react/outline\";\r\n\r\nconst solutions = [\r\n  {\r\n    name: \"Add Password\",\r\n    link: \"/passwords/add\",\r\n    icon: FingerPrintIcon,\r\n  },\r\n  {\r\n    name: \"Add Notes\",\r\n    link: \"/add/note\",\r\n    icon: PaperClipIcon,\r\n  },\r\n  // {\r\n  //   name: \"Add Addresses\",\r\n  //   link: \"/add/address\",\r\n  //   icon: MapIcon,\r\n  // },\r\n];\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nconst Button = () => {\r\n  return (\r\n    <Popover className='realtive '>\r\n      {({ open }) => (\r\n        <>\r\n          <Popover.Button\r\n            className={classNames(\r\n              open ? \"text-gray-900\" : \"text-gray-500\",\r\n              \"group p-3 m-4 mb-20 mr-4 z-40 bg-yellow-500  fixed bottom-0 right-0  rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none \"\r\n            )}>\r\n            <PlusSmIconOutline\r\n              className='w-8 h-8 text-white'\r\n              aria-hidden='true'\r\n            />\r\n          </Popover.Button>\r\n\r\n          <Transition\r\n            as={Fragment}\r\n            enter='transition ease-out duration-200'\r\n            enterFrom='opacity-0 translate-y-1'\r\n            enterTo='opacity-100 translate-y-0'\r\n            leave='transition ease-in duration-150'\r\n            leaveFrom='opacity-100 translate-y-0'\r\n            leaveTo='opacity-0 translate-y-1'>\r\n            <Popover.Panel className='absolute bottom-0 right-0 z-40 pb-4 pr-4 '>\r\n              <div className='overflow-hidden rounded-lg shadow-lg'>\r\n                <div className='relative grid gap-6 px-5 py-6 bg-white sm:gap-8 sm:p-8'>\r\n                  {solutions.map((item) => (\r\n                    <Link\r\n                      key={item.name}\r\n                      to={item.link}\r\n                      type='button'\r\n                      className='flex items-start p-2 -m-3 transition duration-150 ease-in-out rounded-lg '>\r\n                      <item.icon\r\n                        className='flex-shrink-0 w-6 h-6 text-blue-600'\r\n                        aria-hidden='true'\r\n                      />\r\n                      <div className='ml-4'>\r\n                        <p className='text-base font-medium text-gray-900'>\r\n                          {item.name}\r\n                        </p>\r\n                      </div>\r\n                    </Link>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </Popover.Panel>\r\n          </Transition>\r\n        </>\r\n      )}\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","/** @format */\r\n\r\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\r\n","/** @format */\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from \"../constants/userConstants\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      JSON.stringify(email, password),\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n\r\n  dispatch({ type: USER_LIST_RESET });\r\n  document.location.href = \"/login\";\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      JSON.stringify(name, email, password),\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n    toast.error(`User already exists`);\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    toast.info(\"Profile Updated\");\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS });\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { Fragment, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  HomeIcon,\r\n  // MapIcon,\r\n  FingerPrintIcon,\r\n  PaperClipIcon,\r\n  MenuAlt2Icon,\r\n  XIcon,\r\n} from \"@heroicons/react/outline\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Dialog, Menu, Transition } from \"@headlessui/react\";\r\nimport { SearchIcon } from \"@heroicons/react/solid\";\r\nimport AddButton from \"../misc/Button\";\r\n\r\nimport { logout } from \"../../actions/userActions\";\r\n\r\nconst userNavigation = [{ name: \"Your Profile\", to: \"/setting\" }];\r\n\r\nconst navigation = [\r\n  { name: \"Dashboard\", href: \"/dashboard\", icon: HomeIcon },\r\n  {\r\n    name: \"Passwords\",\r\n    href: \"/passwords\",\r\n    icon: FingerPrintIcon,\r\n  },\r\n  { name: \"Notes\", href: \"/notes\", icon: PaperClipIcon },\r\n  // { name: \"Addresses\", href: \"/addresses\", icon: MapIcon },\r\n];\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nconst SearchBar = () => {\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=''>\r\n      <Transition.Root show={sidebarOpen} as={Fragment}>\r\n        <Dialog\r\n          as='div'\r\n          className='fixed inset-0 z-40 flex md:hidden'\r\n          onClose={setSidebarOpen}>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter='transition-opacity ease-linear duration-300'\r\n            enterFrom='opacity-0'\r\n            enterTo='opacity-100'\r\n            leave='transition-opacity ease-linear duration-300'\r\n            leaveFrom='opacity-100'\r\n            leaveTo='opacity-0'>\r\n            <Dialog.Overlay className='fixed inset-0 bg-gray-600 bg-opacity-75' />\r\n          </Transition.Child>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter='transition ease-in-out duration-300 transform'\r\n            enterFrom='-translate-x-full'\r\n            enterTo='translate-x-0'\r\n            leave='transition ease-in-out duration-300 transform'\r\n            leaveFrom='translate-x-0'\r\n            leaveTo='-translate-x-full'>\r\n            <div className='relative flex flex-col flex-1 w-full max-w-xs pt-5 pb-4 bg-white'>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-in-out duration-300'\r\n                enterFrom='opacity-0'\r\n                enterTo='opacity-100'\r\n                leave='ease-in-out duration-300'\r\n                leaveFrom='opacity-100'\r\n                leaveTo='opacity-0'>\r\n                <div className='absolute top-0 right-0 pt-2 -mr-12'>\r\n                  <button\r\n                    type='button'\r\n                    className='flex items-center justify-center w-10 h-10 ml-1 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white'\r\n                    onClick={() => setSidebarOpen(false)}>\r\n                    <span className='sr-only'>Close sidebar</span>\r\n                    <XIcon className='w-6 h-6 text-white' aria-hidden='true' />\r\n                  </button>\r\n                </div>\r\n              </Transition.Child>\r\n              <div className='flex items-center flex-shrink-0 px-4'>\r\n                <img\r\n                  className='w-auto h-10 transition-all hover:animate-spin'\r\n                  src='https://media.publit.io/file/noun_vault_3097826-2.svg'\r\n                  alt='PassMan'\r\n                />\r\n                <span className='text-2xl text-gray-500 uppercase '>\r\n                  PassMan\r\n                </span>\r\n              </div>\r\n              <div className='flex-1 h-0 mt-5 overflow-y-auto'>\r\n                <nav className='px-2 space-y-1'>\r\n                  {navigation.map((item) => (\r\n                    <a\r\n                      key={item.name}\r\n                      href={item.href}\r\n                      className={classNames(\r\n                        item.current\r\n                          ? \"bg-gray-100 text-gray-900\"\r\n                          : \"text-gray-600 hover:bg-gray-50 hover:text-gray-900\",\r\n                        \"group flex items-center px-2 py-2 text-base font-medium rounded-md\"\r\n                      )}>\r\n                      <item.icon\r\n                        className={classNames(\r\n                          item.current\r\n                            ? \"text-gray-500\"\r\n                            : \"text-gray-400 group-hover:text-gray-500\",\r\n                          \"mr-4 flex-shrink-0 h-6 w-6\"\r\n                        )}\r\n                        aria-hidden='true'\r\n                      />\r\n                      {item.name}\r\n                    </a>\r\n                  ))}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n          <div className='flex-shrink-0 w-14' aria-hidden='true'>\r\n            {/* Dummy element to force sidebar to shrink to fit close icon */}\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n      <div className='relative z-10 flex flex-shrink-0 h-16 bg-white shadow'>\r\n        <button\r\n          type='button'\r\n          className='px-4 text-gray-500 border-r border-gray-200 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500 md:hidden'\r\n          onClick={() => setSidebarOpen(true)}>\r\n          <span className='sr-only'>Open sidebar</span>\r\n          <MenuAlt2Icon className='w-6 h-6' aria-hidden='true' />\r\n        </button>\r\n        <div className='flex justify-between flex-1 px-4'>\r\n          <div className='flex items-center flex-1'>\r\n            <Link to='/search' className='w-full cursor-text'>\r\n              <form className='flex w-full md:ml-0' action='#' method='GET'>\r\n                <label htmlFor='search-field' className='sr-only'>\r\n                  Search\r\n                </label>\r\n                <div className='relative w-full text-gray-400 focus-within:text-gray-600'>\r\n                  <div className='absolute inset-y-0 left-0 flex items-center pointer-events-none'>\r\n                    <SearchIcon className='w-5 h-5' aria-hidden='true' />\r\n                  </div>\r\n                  <input\r\n                    id='search-field'\r\n                    className='block py-2 pl-8 pr-3 text-gray-900 placeholder-gray-500 border-transparent focus:outline-none focus:placeholder-gray-400 focus:ring-0 focus:border-transparent sm:text-sm'\r\n                    placeholder='Search'\r\n                    type='search'\r\n                    name='search'\r\n                  />\r\n                </div>\r\n              </form>\r\n            </Link>\r\n          </div>\r\n          <div className='flex items-center ml-4 md:ml-6'>\r\n            <div className='text-sm'>{userInfo.name}</div>\r\n            {/* Profile dropdown */}\r\n            <Menu as='div' className='relative ml-3'>\r\n              <div>\r\n                <Menu.Button className='flex items-center max-w-xs text-sm bg-white rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                  <span className='sr-only'>Open user menu</span>\r\n                  <img\r\n                    className='inline-block w-12 h-12 rounded-full lg:w-8 lg:h-8'\r\n                    src='https://images.unsplash.com/photo-1598013924228-f336656b163c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1746&q=80&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'\r\n                    alt=''\r\n                  />\r\n                </Menu.Button>\r\n              </div>\r\n              <Transition\r\n                as={Fragment}\r\n                enter='transition ease-out duration-100'\r\n                enterFrom='transform opacity-0 scale-95'\r\n                enterTo='transform opacity-100 scale-100'\r\n                leave='transition ease-in duration-75'\r\n                leaveFrom='transform opacity-100 scale-100'\r\n                leaveTo='transform opacity-0 scale-95'>\r\n                <Menu.Items className='absolute right-0 w-48 py-1 mt-2 origin-top-right bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none'>\r\n                  {userNavigation.map((item) => (\r\n                    <Menu.Item key={item.name}>\r\n                      {({ active }) => (\r\n                        <Link\r\n                          to={item.to}\r\n                          className={classNames(\r\n                            active ? \"bg-gray-100\" : \"\",\r\n                            \"block px-4 py-2 text-sm text-gray-700\"\r\n                          )}>\r\n                          {item.name}\r\n                        </Link>\r\n                      )}\r\n                    </Menu.Item>\r\n                  ))}\r\n                  <Menu.Item>\r\n                    {({ active }) => (\r\n                      <span\r\n                        onClick={logoutHandler}\r\n                        className={classNames(\r\n                          active ? \"bg-gray-100\" : \"\",\r\n                          \"block px-4 py-2 text-sm text-gray-700\"\r\n                        )}>\r\n                        Log Out\r\n                      </span>\r\n                    )}\r\n                  </Menu.Item>\r\n                </Menu.Items>\r\n              </Transition>\r\n            </Menu>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <AddButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { CollectionIcon } from \"@heroicons/react/outline\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='flex justify-center '>\r\n      <CollectionIcon className='w-10 h-10 animate-pulse' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","/** @format */\r\n//PASSWORDS\r\n\r\nexport const PASSWORD_LIST_REQUEST = \"PASSWORD_LIST_REQUEST\";\r\nexport const PASSWORD_LIST_SUCCESS = \"PASSWORD_LIST_SUCCESS\";\r\nexport const PASSWORD_LIST_FAIL = \"PASSWORD_LIST_FAIL\";\r\nexport const PASSWORD_LIST_CLEAR = \"PASSWORD_LIST_CLEAR\";\r\n\r\nexport const PASSWORD_CREATE_REQUEST = \"PASSWORD_CREATE_REQUEST\";\r\nexport const PASSWORD_CREATE_SUCCESS = \"PASSWORD_CREATE_SUCCESS\";\r\nexport const PASSWORD_CREATE_FAIL = \"PASSWORD_CREATE_FAIL\";\r\nexport const PASSWORD_CREATE_RESET = \"PASSWORD_CREATE_RESET\";\r\n\r\nexport const PASSWORD_DELETE_REQUEST = \"PASSWORD_DELETE_REQUEST\";\r\nexport const PASSWORD_DELETE_SUCCESS = \"PASSWORD_DELETE_SUCCESS\";\r\nexport const PASSWORD_DELETE_FAIL = \"PASSWORD_DELETE_FAIL\";\r\nexport const PASSWORD_DELETE_RESET = \"PASSWORD_DELETE_RESET\";\r\n\r\nexport const PASSWORD_UPDATE_REQUEST = \"PASSWORD_UPDATE_REQUEST\";\r\nexport const PASSWORD_UPDATE_SUCCESS = \"PASSWORD_UPDATE_SUCCESS\";\r\nexport const PASSWORD_UPDATE_FAIL = \"PASSWORD_UPDATE_FAIL\";\r\nexport const PASSWORD_UPDATE_RESET = \"PASSWORD_UPDATE_RESET\";\r\n\r\nexport const PASSWORD_DETAILS_REQUEST = \"PASSWORD_DETAILS_REQUEST\";\r\nexport const PASSWORD_DETAILS_SUCCESS = \"PASSWORD_DETAILS_SUCCESS\";\r\nexport const PASSWORD_DETAILS_FAIL = \"PASSWORD_DETAILS_FAIL\";\r\n\r\n//NOTES\r\n\r\n// export const NOTES_LIST_REQUEST = \"NOTES_LIST_REQUEST\";\r\n// export const NOTES_LIST_SUCCESS = \"NOTES_LIST_SUCCESS\";\r\n// export const NOTES_LIST_FAIL = \"NOTES_LIST_FAIL\";\r\n\r\n// export const NOTES_CREATE_REQUEST = \"NOTES_LIST_REQUEST\";\r\n// export const NOTES_CREATE_SUCCESS = \"NOTES_LIST_SUCCESS\";\r\n// export const NOTES_CREATE_FAIL = \"NOTES_LIST_FAIL\";\r\n// export const NOTES_CREATE_RESET = \"NOTES_LIST_RESET\";\r\n\r\n// export const NOTES_DELETE_REQUEST = \"NOTES_LIST_REQUEST\";\r\n// export const NOTES_DELETE_SUCCESS = \"NOTES_LIST_SUCCESS\";\r\n// export const NOTES_DELETE_FAIL = \"NOTES_LIST_FAIL\";\r\n\r\n// export const NOTES_EDIT_REQUEST = \"NOTES_LIST_REQUEST\";\r\n// export const NOTES_EDIT_SUCCESS = \"NOTES_LIST_SUCCESS\";\r\n// export const NOTES_EDIT_FAIL = \"NOTES_LIST_FAIL\";\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { FingerPrintIcon } from \"@heroicons/react/outline\";\r\nconst passwordState = () => {\r\n  return (\r\n    <div className='py-12 border-4 border-gray-200 border-dashed rounded-lg ove rflow-hidden h-96 md:py-20 lg:py-24'>\r\n      <div className='relative px-4 mx-auto max-w-7xl sm:px-6 lg:px-8'>\r\n        <div className='text-center '>\r\n          <svg\r\n            className='w-12 h-12 mx-auto text-gray-400'\r\n            fill='none'\r\n            viewBox='0 0 24 24'\r\n            stroke='currentColor'\r\n            aria-hidden='true'>\r\n            <path\r\n              vectorEffect='non-scaling-stroke'\r\n              strokeLinecap='round'\r\n              strokeLinejoin='round'\r\n              strokeWidth={2}\r\n              d='M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z'\r\n            />\r\n          </svg>\r\n          <h3 className='mt-2 text-sm font-medium text-gray-900'>\r\n            No passwords\r\n          </h3>\r\n          <p className='mt-1 text-sm text-gray-500'>\r\n            Get started by creating a new Password.\r\n          </p>\r\n          <div className='mt-6'>\r\n            <Link\r\n              to='/passwords/add'\r\n              type='button'\r\n              className='inline-flex items-center px-4 py-2 text-sm font-medium text-white transition-colors ease-in-out delay-75 transform bg-yellow-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n              <FingerPrintIcon\r\n                className='w-5 h-5 mr-2 -ml-1'\r\n                aria-hidden='true'\r\n              />\r\n              New Password\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className='relative'>\r\n          <div className='py-2'></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default passwordState;\r\n","/** @format */\r\n\r\nimport React, { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  TrashIcon,\r\n  PencilIcon,\r\n  ChevronDoubleUpIcon,\r\n} from \"@heroicons/react/outline\";\r\nimport Loader from \"../loader/Loader\";\r\nimport { listPasswords } from \"../../actions/passwordActions\";\r\n\r\nimport PasswordState from \"../emptyState/passwordState\";\r\n\r\n//Toastify\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nconst PasswordContent = (props) => {\r\n  const dispatch = useDispatch();\r\n  const passwordList = useSelector((state) => state.passwordList);\r\n  const { loading, error, passwords } = passwordList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listPasswords());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <main className='relative flex-1 overflow-y-auto focus:outline-none'>\r\n        <div className='py-6'>\r\n          <div className='px-4 mx-auto max-w-7xl sm:px-6 md:px-8'>\r\n            <div>\r\n              <ToastContainer autoClose={2000} />\r\n              <h1 className='text-2xl font-semibold text-gray-900'>\r\n                {props.title}\r\n              </h1>\r\n              <Fragment>\r\n                {loading ? (\r\n                  <Loader />\r\n                ) : error ? (\r\n                  <h3 className='animate-pulse'>{error}</h3>\r\n                ) : passwords.length === 0 ? (\r\n                  <PasswordState />\r\n                ) : (\r\n                  <Fragment>\r\n                    <ul className='grid grid-cols-1 gap-5 mt-3 sm:gap-6 sm:grid-cols-2 lg:grid-cols-4 group'>\r\n                      {passwords.map((password) => (\r\n                        <div key={password._id}>\r\n                          <div className='border-r-4 rounded-md hover:border-yellow-400'>\r\n                            <li className='flex col-span-1 rounded-md shadow-sm'>\r\n                              <img\r\n                                alt='logo '\r\n                                src={`https://logo.clearbit.com/${password.url}`}\r\n                                onError={(e) => {\r\n                                  e.target.onerror = null;\r\n                                  e.target.src =\r\n                                    \"https://media.publit.io/file/MiscPasswordIcon.svg\";\r\n                                }}\r\n                                className='flex items-center flex-shrink-0 object-contain text-sm font-medium text-white shadow-sm w-14 rounded-l-md'\r\n                              />\r\n\r\n                              <div className='flex flex-row-reverse items-center flex-1 truncate bg-white border-t border-b border-r border-gray-200 rounded-r-md'>\r\n                                <div className='flex-1 px-4 py-2 text-sm truncate'>\r\n                                  <a\r\n                                    href={password.href}\r\n                                    className='font-medium text-gray-900 hover:text-gray-600'>\r\n                                    {password.username}\r\n                                  </a>\r\n                                  <p className='text-gray-500 '>\r\n                                    {password.url}\r\n                                  </p>\r\n                                </div>\r\n                                <div className='absolute flex-shrink-0 m-2 transform scale-0 group-hover:scale-100 '>\r\n                                  <a\r\n                                    href={`https://${password.url}`}\r\n                                    className='inline-flex items-center justify-center w-8 h-8 mr-1 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\r\n                                    <ChevronDoubleUpIcon\r\n                                      className='w-5 h-5 text-gray-400 rounded hover:bg-blue-700 hover:text-gray-100'\r\n                                      aria-hidden='true'\r\n                                    />\r\n                                  </a>\r\n                                  <Link\r\n                                    to={`/password/${password._id}/edit`}\r\n                                    type='button'\r\n                                    className='inline-flex items-center justify-center w-8 h-8 mr-1 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\r\n                                    <PencilIcon\r\n                                      className='w-5 h-5 text-gray-400 rounded hover:bg-gray-800 hover:text-gray-100'\r\n                                      aria-hidden='true'\r\n                                    />\r\n                                  </Link>\r\n                                  <Link\r\n                                    to={`/password/${password._id}/delete`}\r\n                                    type='button'\r\n                                    className='inline-flex items-center justify-center w-8 h-8 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\r\n                                    <TrashIcon\r\n                                      className='w-5 h-5 text-gray-400 rounded hover:bg-red-600 hover:text-gray-100'\r\n                                      aria-hidden='true'\r\n                                    />\r\n                                  </Link>\r\n                                </div>\r\n                              </div>\r\n                            </li>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </ul>{\" \"}\r\n                  </Fragment>\r\n                )}\r\n              </Fragment>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordContent;\r\n","/** @format */\r\nimport axios from \"axios\";\r\nimport {\r\n  PASSWORD_LIST_REQUEST,\r\n  PASSWORD_LIST_SUCCESS,\r\n  PASSWORD_LIST_FAIL,\r\n  PASSWORD_DELETE_REQUEST,\r\n  PASSWORD_DELETE_SUCCESS,\r\n  PASSWORD_DELETE_FAIL,\r\n  PASSWORD_CREATE_REQUEST,\r\n  PASSWORD_CREATE_SUCCESS,\r\n  PASSWORD_CREATE_FAIL,\r\n  PASSWORD_DETAILS_REQUEST,\r\n  PASSWORD_DETAILS_SUCCESS,\r\n  PASSWORD_DETAILS_FAIL,\r\n  PASSWORD_UPDATE_REQUEST,\r\n  PASSWORD_UPDATE_SUCCESS,\r\n  PASSWORD_UPDATE_FAIL,\r\n} from \"../constants/passwordConstants\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const listPasswords = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PASSWORD_LIST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"api/passwords\", config);\r\n\r\n    dispatch({\r\n      type: PASSWORD_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PASSWORD_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createPassword = (formData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PASSWORD_CREATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/passwords`, formData, config);\r\n\r\n    dispatch({\r\n      type: PASSWORD_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    toast.success(\"Password Created\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PASSWORD_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listPasswordDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PASSWORD_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/passwords/${id}`);\r\n\r\n    dispatch({\r\n      type: PASSWORD_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PASSWORD_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletePassword = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PASSWORD_DELETE_REQUEST, payload: id });\r\n\r\n    await axios.delete(`/api/passwords/${id}`);\r\n\r\n    dispatch({\r\n      type: PASSWORD_DELETE_SUCCESS,\r\n    });\r\n    toast.error(\"Password Deleted\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PASSWORD_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updatePassword = (password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PASSWORD_UPDATE_REQUEST });\r\n\r\n    const { data } = await axios.put(\r\n      `/api/passwords/${password._id}`,\r\n      password\r\n    );\r\n    dispatch({\r\n      type: PASSWORD_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: PASSWORD_DETAILS_SUCCESS, payload: data });\r\n    toast.info(\"Password Updated\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PASSWORD_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","/** @format */\r\n\r\nexport const NOTE_LIST_REQUEST = \"NOTE_LIST_REQUEST\";\r\nexport const NOTE_LIST_SUCCESS = \"NOTE_LIST_SUCCESS\";\r\nexport const NOTE_LIST_FAIL = \"NOTE_LIST_FAIL\";\r\nexport const NOTE_LIST_CLEAR = \"NOTE_LIST_CLEAR\";\r\n\r\nexport const NOTE_CREATE_REQUEST = \"NOTE_CREATE_REQUEST\";\r\nexport const NOTE_CREATE_SUCCESS = \"NOTE_CREATE_SUCCESS\";\r\nexport const NOTE_CREATE_FAIL = \"NOTE_CREATE_FAIL\";\r\nexport const NOTE_CREATE_RESET = \"NOTE_CREATE_RESET\";\r\n\r\nexport const NOTE_DELETE_REQUEST = \"NOTE_DELETE_REQUEST\";\r\nexport const NOTE_DELETE_SUCCESS = \"NOTE_DELETE_SUCCESS\";\r\nexport const NOTE_DELETE_FAIL = \"NOTE_DELETE_FAIL\";\r\nexport const NOTE_DELETE_RESET = \"NOTE_DELETE_RESET\";\r\n\r\nexport const NOTE_UPDATE_REQUEST = \"NOTE_UPDATE_REQUEST\";\r\nexport const NOTE_UPDATE_SUCCESS = \"NOTE_UPDATE_SUCCESS\";\r\nexport const NOTE_UPDATE_FAIL = \"NOTE_UPDATE_FAIL\";\r\nexport const NOTE_UPDATE_RESET = \"NOTE_UPDATE_RESET\";\r\n\r\nexport const NOTE_DETAILS_REQUEST = \"NOTE_DETAILS_REQUEST\";\r\nexport const NOTE_DETAILS_SUCCESS = \"NOTE_DETAILS_SUCCESS\";\r\nexport const NOTE_DETAILS_FAIL = \"NOTE_DETAILS_FAIL\";\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { PaperClipIcon } from \"@heroicons/react/outline\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst noteState = () => {\r\n  return (\r\n    <div className='py-12 border-4 border-gray-200 border-dashed rounded-lg ove rflow-hidden h-96 md:py-20 lg:py-24'>\r\n      <div className='relative px-4 mx-auto max-w-7xl sm:px-6 lg:px-8'>\r\n        <div className='text-center '>\r\n          <svg\r\n            className='w-12 h-12 mx-auto text-gray-400'\r\n            fill='none'\r\n            viewBox='0 0 24 24'\r\n            stroke='currentColor'\r\n            aria-hidden='true'>\r\n            <path\r\n              vectorEffect='non-scaling-stroke'\r\n              strokeLinecap='round'\r\n              strokeLinejoin='round'\r\n              strokeWidth={2}\r\n              d='M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z'\r\n            />\r\n          </svg>\r\n          <h3 className='mt-2 text-sm font-medium text-gray-900'>No notes</h3>\r\n          <p className='mt-1 text-sm text-gray-500'>\r\n            Get started by creating a new Note.\r\n          </p>\r\n          <div className='mt-6'>\r\n            <Link\r\n              to='/add/note'\r\n              type='button'\r\n              className='inline-flex items-center px-4 py-2 text-sm font-medium text-white transition-colors ease-in-out delay-75 transform bg-yellow-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n              <PaperClipIcon\r\n                className='w-5 h-5 mr-2 -ml-1'\r\n                aria-hidden='true'\r\n              />\r\n              New Note\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className='relative'>\r\n          <div className='py-2'></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default noteState;\r\n","/** @format */\r\n\r\nimport React, { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TrashIcon, PencilIcon } from \"@heroicons/react/outline\";\r\nimport Loader from \"../loader/Loader\";\r\nimport { listNotes } from \"../../actions/noteActions\";\r\n\r\nimport NoteState from \"../emptyState/noteState\";\r\n\r\n//Toastify\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nconst PasswordContent = (props) => {\r\n  const dispatch = useDispatch();\r\n  const noteList = useSelector((state) => state.noteList);\r\n  const { loading, error, notes } = noteList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listNotes());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <main className='relative flex-1 overflow-y-auto focus:outline-none'>\r\n        <div className='py-6'>\r\n          <div className='px-4 mx-auto max-w-7xl sm:px-6 md:px-8'>\r\n            <div>\r\n              <ToastContainer autoClose={2000} />\r\n              <h1 className='text-2xl font-semibold text-gray-900'>\r\n                {props.title}\r\n              </h1>\r\n              <Fragment>\r\n                {loading ? (\r\n                  <Loader />\r\n                ) : error ? (\r\n                  <h3 className='animate-pulse'>{error}</h3>\r\n                ) : notes.length === 0 ? (\r\n                  <NoteState />\r\n                ) : (\r\n                  <Fragment>\r\n                    <ul className='grid grid-cols-1 gap-5 mt-3 sm:gap-6 sm:grid-cols-2 lg:grid-cols-4 group'>\r\n                      {notes.map((note) => (\r\n                        <div key={note._id}>\r\n                          <div className='border-r-4 rounded-md hover:border-yellow-400'>\r\n                            <li className='flex col-span-1 rounded-md shadow-sm'>\r\n                              <img\r\n                                alt='logo'\r\n                                src='https://media.publit.io/file/noun-triangle.svg'\r\n                                className='flex items-center flex-shrink-0 object-contain text-sm font-medium text-white shadow-sm w-14 rounded-l-md' //media.publit.io/file/triangle/orangeTriangle.svg\",\"\r\n                              />\r\n\r\n                              <div className='flex flex-row-reverse items-center flex-1 truncate bg-white border-t border-b border-r border-gray-200 rounded-r-md'>\r\n                                <div className='flex-1 px-4 py-2 text-sm truncate'>\r\n                                  {note.title}\r\n                                  <p className='text-gray-500 truncate '>\r\n                                    {note.caption}\r\n                                  </p>\r\n                                </div>\r\n                                <div className='absolute flex-shrink-0 m-2 transform scale-0 group-hover:scale-100 '>\r\n                                  <Link\r\n                                    to={`/note/${note._id}/edit`}\r\n                                    type='button'\r\n                                    className='inline-flex items-center justify-center w-8 h-8 mr-1 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\r\n                                    <PencilIcon\r\n                                      className='w-5 h-5 text-gray-400 rounded hover:bg-gray-800 hover:text-gray-100'\r\n                                      aria-hidden='true'\r\n                                    />\r\n                                  </Link>\r\n                                  <Link\r\n                                    to={`/note/${note._id}/delete`}\r\n                                    type='button'\r\n                                    className='inline-flex items-center justify-center w-8 h-8 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\r\n                                    <TrashIcon\r\n                                      className='w-5 h-5 text-gray-400 rounded hover:bg-red-600 hover:text-gray-100'\r\n                                      aria-hidden='true'\r\n                                    />\r\n                                  </Link>\r\n                                </div>\r\n                              </div>\r\n                            </li>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </ul>{\" \"}\r\n                  </Fragment>\r\n                )}\r\n              </Fragment>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordContent;\r\n","/** @format */\r\nimport axios from \"axios\";\r\nimport {\r\n  NOTE_LIST_REQUEST,\r\n  NOTE_LIST_SUCCESS,\r\n  NOTE_LIST_FAIL,\r\n  NOTE_DELETE_REQUEST,\r\n  NOTE_DELETE_SUCCESS,\r\n  NOTE_DELETE_FAIL,\r\n  NOTE_CREATE_REQUEST,\r\n  NOTE_CREATE_SUCCESS,\r\n  NOTE_CREATE_FAIL,\r\n  NOTE_DETAILS_REQUEST,\r\n  NOTE_DETAILS_SUCCESS,\r\n  NOTE_DETAILS_FAIL,\r\n  NOTE_UPDATE_REQUEST,\r\n  NOTE_UPDATE_SUCCESS,\r\n  NOTE_UPDATE_FAIL,\r\n} from \"../constants/noteConstants\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const listNotes = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: NOTE_LIST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"api/notes\", config);\r\n\r\n    dispatch({\r\n      type: NOTE_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTE_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createNote = (formData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: NOTE_CREATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/notes`, formData, config);\r\n\r\n    dispatch({\r\n      type: NOTE_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    toast.success(\"Note Created\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTE_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listNoteDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NOTE_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/notes/${id}`);\r\n\r\n    dispatch({\r\n      type: NOTE_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTE_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteNote = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NOTE_DELETE_REQUEST, payload: id });\r\n\r\n    await axios.delete(`/api/notes/${id}`);\r\n\r\n    dispatch({\r\n      type: NOTE_DELETE_SUCCESS,\r\n    });\r\n    toast.error(\"Note Deleted\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTE_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateNote = (note) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NOTE_UPDATE_REQUEST });\r\n\r\n    const { data } = await axios.put(`/api/notes/${note._id}`, note);\r\n    dispatch({\r\n      type: NOTE_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: NOTE_DETAILS_SUCCESS, payload: data });\r\n    toast.info(\"Note Updated\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTE_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport Sidebar from \"../navbar/Sidebar\";\r\nimport SearchBar from \"../navbar/SearchBar\";\r\n\r\nimport PasswordContent from \"../content/PasswordContent\";\r\nimport NoteContent from \"../content/NoteContent\";\r\n// import AddressContent from \"../content/AddressContent\";\r\n\r\nconst DashboardScreen = () => {\r\n  return (\r\n    <div className='relative flex flex-1 h-screen overflow-hidden bg-gray-100'>\r\n      <Sidebar />\r\n      <div className='flex flex-col flex-1 w-0 overflow-auto'>\r\n        <SearchBar />\r\n        <PasswordContent title='Passwords' />\r\n        <NoteContent title='Notes' />\r\n        {/* <AddressContent title='Addresses' /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport Sidebar from \"../navbar/Sidebar\";\r\nimport SearchBar from \"../navbar/SearchBar\";\r\nimport PasswordContent from \"../content/PasswordContent\";\r\n\r\nconst DashboardScreen = () => {\r\n  return (\r\n    <div className='relative flex flex-1 h-screen overflow-auto bg-gray-100'>\r\n      <Sidebar />\r\n      <div className='flex flex-col flex-1 w-0 overflow-auto'>\r\n        <SearchBar />\r\n        <PasswordContent title='Passwords' />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport Sidebar from \"../navbar/Sidebar\";\r\nimport SearchBar from \"../navbar/SearchBar\";\r\nimport NoteContent from \"../content/NoteContent\";\r\n\r\nconst DashboardScreen = () => {\r\n  return (\r\n    <div className='relative flex flex-1 h-screen overflow-hidden bg-gray-100'>\r\n      <Sidebar />\r\n      <div className='flex flex-col flex-1 w-0 overflow-hidden'>\r\n        <SearchBar />\r\n        <NoteContent title='Notes' />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { MapIcon } from \"@heroicons/react/outline\";\r\n\r\nconst AddressContent = (props) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <main className='relative flex-1 overflow-y-auto focus:outline-none'>\r\n          <div className='py-6'>\r\n            <section className='px-4 mx-auto max-w-7xl sm:px-6 md:px-8'>\r\n              <h1 className='text-2xl font-semibold text-gray-900'>\r\n                {props.title}\r\n              </h1>\r\n            </section>\r\n            <div className='self-center px-2 mx-auto max-w-7xl sm:px-6 md:px-8'>\r\n              {/* Begin Replace */}\r\n              <div className='py-12 border-4 border-gray-200 border-dashed rounded-lg ove rflow-hidden h-96 md:py-20 lg:py-24'>\r\n                <div className='relative px-4 mx-auto max-w-7xl sm:px-6 lg:px-8'>\r\n                  <div className='text-center '>\r\n                    <svg\r\n                      className='w-12 h-12 mx-auto text-gray-400'\r\n                      fill='none'\r\n                      viewBox='0 0 24 24'\r\n                      stroke='currentColor'\r\n                      aria-hidden='true'>\r\n                      <path\r\n                        vectorEffect='non-scaling-stroke'\r\n                        strokeLinecap='round'\r\n                        strokeLinejoin='round'\r\n                        strokeWidth={2}\r\n                        d='M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z'\r\n                      />\r\n                    </svg>\r\n                    <h3 className='mt-2 text-sm font-medium text-gray-900'>\r\n                      No notes\r\n                    </h3>\r\n                    <p className='mt-1 text-sm text-gray-500'>\r\n                      Get started by creating a new note.\r\n                    </p>\r\n                    <div className='mt-6'>\r\n                      <button\r\n                        type='button'\r\n                        className='inline-flex items-center px-4 py-2 text-sm font-medium text-white transition-colors ease-in-out delay-75 transform bg-yellow-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                        <MapIcon\r\n                          className='w-5 h-5 mr-2 -ml-1'\r\n                          aria-hidden='true'\r\n                        />\r\n                        New Note\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className='relative'>\r\n                    <div className='py-2'></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* /End replace */}{\" \"}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressContent;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport Sidebar from \"../navbar/Sidebar\";\r\nimport SearchBar from \"../navbar/SearchBar\";\r\nimport AddressContent from \"../content/AddressContent\";\r\n\r\nconst DashboardScreen = () => {\r\n  return (\r\n    <div className='relative flex flex-1 h-screen overflow-hidden bg-gray-100'>\r\n      <Sidebar />\r\n      <div className='flex flex-col flex-1 w-0 overflow-hidden'>\r\n        <SearchBar />\r\n        <AddressContent title='Addresses' />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","/** @format */\r\nimport React from \"react\";\r\nimport { Fragment, useState, useRef, useEffect } from \"react\";\r\nimport { useNavigate, Link, useParams } from \"react-router-dom\";\r\n//Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPassword } from \"../../actions/passwordActions\";\r\nimport { PASSWORD_CREATE_RESET } from \"../../constants/passwordConstants\";\r\nimport { getUserDetails } from \"../../actions/userActions\";\r\n//Final Form\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { XCircleIcon, EyeIcon, EyeOffIcon } from \"@heroicons/react/solid\";\r\n\r\nconst required = (value) => (value ? undefined : \"Required\");\r\n\r\nconst AddPasswordModal = () => {\r\n  const dispatch = useDispatch();\r\n  const passwordId = useParams();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const cancelButtonRef = useRef(null);\r\n\r\n  const passwordCreate = useSelector((state) => state.passwordCreate);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n  const { success: successCreate, password: createdPassword } = passwordCreate;\r\n  const passwordDetails = useSelector((state) => state.passwordDetails);\r\n  const { password } = passwordDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PASSWORD_CREATE_RESET });\r\n    dispatch(getUserDetails(\"profile\"));\r\n    console.log(user._id);\r\n    if (successCreate) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [\r\n    dispatch,\r\n    passwordId,\r\n    password,\r\n    successCreate,\r\n    createdPassword,\r\n    user,\r\n    navigate,\r\n  ]);\r\n\r\n  //TOGGLE PASSWORD VISION\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePassword = () => {\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n\r\n  if (!open) {\r\n    navigate(\"/\");\r\n  }\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(createPassword(values));\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Transition.Root show={open} as={Fragment}>\r\n        <Dialog\r\n          as='div'\r\n          static\r\n          className='fixed inset-0 z-10 overflow-y-auto'\r\n          initialFocus={cancelButtonRef}\r\n          open={open}\r\n          onClose={setOpen}>\r\n          <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\r\n            <div className='flex-auto'>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-out duration-300'\r\n                enterFrom='opacity-0'\r\n                enterTo='opacity-100'\r\n                leave='ease-in duration-200'\r\n                leaveFrom='opacity-100'\r\n                leaveTo='opacity-0'>\r\n                <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 ' />\r\n              </Transition.Child>\r\n\r\n              {/* This element is to trick the browser into centering the modal contents. */}\r\n              <span\r\n                className='hidden sm:inline-block sm:align-middle sm:h-screen'\r\n                aria-hidden='true'>\r\n                &#8203;\r\n              </span>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-out duration-300'\r\n                enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\r\n                enterTo='opacity-100 translate-y-0 sm:scale-100'\r\n                leave='ease-in duration-200'\r\n                leaveFrom='opacity-100 translate-y-0 sm:scale-100'\r\n                leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\r\n                {/* This controls the actual width of modal based on responsive design */}\r\n                <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-gray-100 rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6 lg:max-w-5xl'>\r\n                  <div className='px-4 py-5 sm:p-6'>\r\n                    <h3 className='p-2 space-y-8 text-lg font-medium leading-6 text-gray-800 bg-yellow-500 divide-y divide-gray-200 shadow-lg bg-yellow-500border-2 rounded-t-md sm:space-y-5'>\r\n                      Add Password\r\n                    </h3>\r\n                    <hr />\r\n\r\n                    <Form\r\n                      onSubmit={onSubmit}\r\n                      render={({ handleSubmit, submitError }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                          <div className='p-4 space-y-8 bg-white border-2 border-gray-100 divide-y divide-gray-200 shadow-lg rounded-b-md sm:space-y-5'>\r\n                            <div>\r\n                              <div className=''>\r\n                                <label\r\n                                  htmlFor='company-website'\r\n                                  className='block text-sm font-medium text-gray-700'>\r\n                                  URL\r\n                                </label>\r\n                                <Field\r\n                                  name='url'\r\n                                  component='input'\r\n                                  placeholder='example.com'\r\n                                  validate={required}>\r\n                                  {({ input, meta, placeholder }) => (\r\n                                    <div>\r\n                                      <div className='flex'>\r\n                                        <span className='block px-4 py-2 pl-1 mb-2 text-gray-500 border border-r-0 border-gray-300 border- rounded-l-md bg-gray-50'>\r\n                                          https://\r\n                                        </span>\r\n                                        <input\r\n                                          {...input}\r\n                                          placeholder={placeholder}\r\n                                          className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 shadow rounded-r-md text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                        />\r\n                                      </div>\r\n                                      {meta.error && meta.touched && (\r\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                          <div className='flex'>\r\n                                            <div className='flex-shrink-0'>\r\n                                              <XCircleIcon\r\n                                                className='w-5 h-5 text-red-400'\r\n                                                aria-hidden='true'\r\n                                              />\r\n                                            </div>\r\n                                            <div className='ml-3'>\r\n                                              <h3 className='text-sm font-medium text-red-800'>\r\n                                                {meta.error}\r\n                                              </h3>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      )}\r\n                                    </div>\r\n                                  )}\r\n                                </Field>\r\n                              </div>\r\n\r\n                              <div className='grid grid-cols-6 gap-6 '>\r\n                                <Field\r\n                                  name='username'\r\n                                  component='input'\r\n                                  placeholder='Enter Username'\r\n                                  validate={required}>\r\n                                  {({ input, meta, placeholder }) => (\r\n                                    <div className='col-span-6 sm:col-span-3'>\r\n                                      <div>\r\n                                        <label\r\n                                          htmlFor='first-name'\r\n                                          className='block text-sm font-medium text-gray-700'>\r\n                                          Username\r\n                                        </label>\r\n                                        <input\r\n                                          type='text'\r\n                                          {...input}\r\n                                          placeholder={placeholder}\r\n                                          className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                        />\r\n                                      </div>\r\n                                      {meta.error && meta.touched && (\r\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                          <div className='flex'>\r\n                                            <div className='flex-shrink-0'>\r\n                                              <XCircleIcon\r\n                                                className='w-5 h-5 text-red-400'\r\n                                                aria-hidden='true'\r\n                                              />\r\n                                            </div>\r\n                                            <div className='ml-3'>\r\n                                              <h3 className='text-sm font-medium text-red-800'>\r\n                                                {meta.error}\r\n                                              </h3>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      )}\r\n                                    </div>\r\n                                  )}\r\n                                </Field>\r\n                                <Field\r\n                                  name='sitePassword'\r\n                                  component='input'\r\n                                  placeholder='Enter Password'\r\n                                  validate={required}>\r\n                                  {({ input, meta, placeholder }) => (\r\n                                    <div className='col-span-6 sm:col-span-3'>\r\n                                      <div>\r\n                                        <label\r\n                                          htmlFor='first-name'\r\n                                          className='block text-sm font-medium text-gray-700'>\r\n                                          Site Password\r\n                                        </label>\r\n                                        <div className='flex '>\r\n                                          <input\r\n                                            type={\r\n                                              passwordShown\r\n                                                ? \"text\"\r\n                                                : \"password\"\r\n                                            }\r\n                                            {...input}\r\n                                            placeholder={placeholder}\r\n                                            className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-t-2 border-b-2 border-l-2 border-gray-300 shadow rounded-l-md text-l focus:outline-none focus:border-blue-500'\r\n                                          />\r\n                                          <span className=''>\r\n                                            <div className='relative grid gap-0 px-2 py-2 bg-gray-100 border-2 border-t-2 border-b-2 border-r-2 border-gray-300 shadow focus:outline-none hover:bg-gray-200 rounded-r-md sm:gap-2 sm:p-x-6 '>\r\n                                              <button\r\n                                                type='button'\r\n                                                onClick={togglePassword}\r\n                                                className='flex-shrink-0 w-6 h-auto text-indigo-600 focus:outline-none'\r\n                                                aria-hidden='true'>\r\n                                                {passwordShown ? (\r\n                                                  <EyeOffIcon />\r\n                                                ) : (\r\n                                                  <EyeIcon />\r\n                                                )}\r\n                                              </button>\r\n                                            </div>\r\n                                          </span>\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      {meta.error && meta.touched && (\r\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                          <div className='flex'>\r\n                                            <div className='flex-shrink-0'>\r\n                                              <XCircleIcon\r\n                                                className='w-5 h-5 text-red-400'\r\n                                                aria-hidden='true'\r\n                                              />\r\n                                            </div>\r\n                                            <div className='ml-3'>\r\n                                              <h3 className='text-sm font-medium text-red-800'>\r\n                                                {meta.error}\r\n                                              </h3>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      )}\r\n                                    </div>\r\n                                  )}\r\n                                </Field>\r\n                              </div>\r\n\r\n                              <Field\r\n                                name='notes'\r\n                                component='textarea'\r\n                                placeholder='Notes'\r\n                                className='box-border block w-full h-32 p-4 px-4 py-2 pl-1 mb-2 border-4 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                              />\r\n                            </div>\r\n                            <div className='pt-5'>\r\n                              <div className='flex justify-end'>\r\n                                <Link\r\n                                  to='/passwords'\r\n                                  type='button'\r\n                                  className='px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                                  Cancel\r\n                                </Link>\r\n\r\n                                <button\r\n                                  type='submit'\r\n                                  className='inline-flex justify-center px-4 py-2 ml-3 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                                  Create\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Transition.Child>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddPasswordModal;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { Fragment, useState, useEffect, useRef } from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\n\r\nimport { XCircleIcon, EyeIcon, EyeOffIcon } from \"@heroicons/react/solid\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useParams, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  listPasswordDetails,\r\n  updatePassword,\r\n} from \"../../actions/passwordActions\";\r\nimport { PASSWORD_UPDATE_RESET } from \"../../constants/passwordConstants\";\r\n\r\nconst required = (value) => (value ? undefined : \"Required\");\r\n\r\nconst EditPasswordModal = () => {\r\n  const dispatch = useDispatch();\r\n  const passwordId = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [open, setOpen] = useState(true);\r\n  const cancelButtonRef = useRef(null);\r\n\r\n  const passwordDetails = useSelector((state) => state.passwordDetails);\r\n  const { password } = passwordDetails;\r\n\r\n  const passwordUpdate = useSelector((state) => state.passwordUpdate);\r\n  const { success } = passwordUpdate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      dispatch({ type: PASSWORD_UPDATE_RESET });\r\n      navigate(\"/passwords\");\r\n    } else {\r\n      if (!password.name || password._id !== passwordId) {\r\n        dispatch(listPasswordDetails(passwordId.id));\r\n      } else {\r\n      }\r\n    }\r\n  }, [dispatch, passwordId, password, success, navigate]);\r\n  let formData = {\r\n    url: password.url,\r\n    username: password.username,\r\n    sitePassword: password.sitePassword,\r\n    notes: password.notes,\r\n  };\r\n  //TOGGLE PASSWORD VISION\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePassword = () => {\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n\r\n  if (!open) {\r\n    return <Navigate to='/' />;\r\n  }\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(updatePassword({ _id: passwordId.id, values }));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Transition.Root show={open} as={Fragment}>\r\n        <Dialog\r\n          as='div'\r\n          static\r\n          className='fixed inset-0 z-10 overflow-y-auto'\r\n          initialFocus={cancelButtonRef}\r\n          open={open}\r\n          onClose={setOpen}>\r\n          <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\r\n            <div className='flex-auto'>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-out duration-300'\r\n                enterFrom='opacity-0'\r\n                enterTo='opacity-100'\r\n                leave='ease-in duration-200'\r\n                leaveFrom='opacity-100'\r\n                leaveTo='opacity-0'>\r\n                <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 ' />\r\n              </Transition.Child>\r\n\r\n              {/* This element is to trick the browser into centering the modal contents. */}\r\n              <span\r\n                className='hidden sm:inline-block sm:align-middle sm:h-screen'\r\n                aria-hidden='true'>\r\n                &#8203;\r\n              </span>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-out duration-300'\r\n                enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\r\n                enterTo='opacity-100 translate-y-0 sm:scale-100'\r\n                leave='ease-in duration-200'\r\n                leaveFrom='opacity-100 translate-y-0 sm:scale-100'\r\n                leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\r\n                {/* This controls the actual width of modal based on responsive design */}\r\n                <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-gray-100 rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6 lg:max-w-5xl'>\r\n                  <div className='px-4 py-5 sm:p-6'>\r\n                    <h3 className='p-2 space-y-8 text-lg font-medium leading-6 text-gray-800 bg-yellow-500 border-2 border-gray-300 divide-y divide-gray-200 shadow-lg rounded-t-md sm:space-y-5'>\r\n                      Edit Password\r\n                    </h3>\r\n                    <hr />\r\n\r\n                    <Form\r\n                      onSubmit={onSubmit}\r\n                      initialValues={{\r\n                        ...formData,\r\n                      }}\r\n                      render={({ handleSubmit, submitError }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                          <div className='p-4 space-y-8 bg-white border-2 border-gray-100 divide-y divide-gray-200 shadow-lg rounded-b-md sm:space-y-5'>\r\n                            <div>\r\n                              <div className=''>\r\n                                <label\r\n                                  htmlFor='company-website'\r\n                                  className='block text-sm font-medium text-gray-700'>\r\n                                  URL\r\n                                </label>\r\n                                <Field\r\n                                  name='url'\r\n                                  component='input'\r\n                                  placeholder='example.com'\r\n                                  validate={required}>\r\n                                  {({ input, meta, placeholder }) => (\r\n                                    <div>\r\n                                      <div className='flex'>\r\n                                        <span className='block px-4 py-2 pl-1 mb-2 text-gray-500 border border-r-0 border-gray-300 border- rounded-l-md bg-gray-50'>\r\n                                          https://\r\n                                        </span>\r\n                                        <input\r\n                                          {...input}\r\n                                          placeholder={placeholder}\r\n                                          className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 shadow rounded-r-md text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                        />\r\n                                      </div>\r\n                                      {meta.error && meta.touched && (\r\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                          <div className='flex'>\r\n                                            <div className='flex-shrink-0'>\r\n                                              <XCircleIcon\r\n                                                className='w-5 h-5 text-red-400'\r\n                                                aria-hidden='true'\r\n                                              />\r\n                                            </div>\r\n                                            <div className='ml-3'>\r\n                                              <h3 className='text-sm font-medium text-red-800'>\r\n                                                {meta.error}\r\n                                              </h3>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      )}\r\n                                    </div>\r\n                                  )}\r\n                                </Field>\r\n                              </div>\r\n\r\n                              <div className='grid grid-cols-6 gap-6 '>\r\n                                <Field\r\n                                  name='username'\r\n                                  component='input'\r\n                                  placeholder='Enter Username'\r\n                                  validate={required}>\r\n                                  {({ input, meta, placeholder }) => (\r\n                                    <div className='col-span-6 sm:col-span-3'>\r\n                                      <div>\r\n                                        <label\r\n                                          htmlFor='first-name'\r\n                                          className='block text-sm font-medium text-gray-700'>\r\n                                          Username\r\n                                        </label>\r\n                                        <input\r\n                                          type='text'\r\n                                          {...input}\r\n                                          placeholder={placeholder}\r\n                                          className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                        />\r\n                                      </div>\r\n                                      {meta.error && meta.touched && (\r\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                          <div className='flex'>\r\n                                            <div className='flex-shrink-0'>\r\n                                              <XCircleIcon\r\n                                                className='w-5 h-5 text-red-400'\r\n                                                aria-hidden='true'\r\n                                              />\r\n                                            </div>\r\n                                            <div className='ml-3'>\r\n                                              <h3 className='text-sm font-medium text-red-800'>\r\n                                                {meta.error}\r\n                                              </h3>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      )}\r\n                                    </div>\r\n                                  )}\r\n                                </Field>\r\n                                <Field\r\n                                  name='sitePassword'\r\n                                  component='input'\r\n                                  placeholder='password.sitePassword'\r\n                                  validate={required}>\r\n                                  {({ input, meta, placeholder }) => (\r\n                                    <div className='col-span-6 sm:col-span-3'>\r\n                                      <div>\r\n                                        <label\r\n                                          htmlFor='first-name'\r\n                                          className='block text-sm font-medium text-gray-700'>\r\n                                          Site Password\r\n                                        </label>\r\n                                        <div className='flex '>\r\n                                          <input\r\n                                            type={\r\n                                              passwordShown\r\n                                                ? \"text\"\r\n                                                : \"password\"\r\n                                            }\r\n                                            {...input}\r\n                                            placeholder={placeholder}\r\n                                            className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-t-2 border-b-2 border-l-2 border-gray-300 shadow rounded-l-md text-l focus:outline-none focus:border-blue-500'\r\n                                          />\r\n                                          <span className=''>\r\n                                            <div className='relative grid gap-0 px-2 py-2 bg-gray-100 border-2 border-t-2 border-b-2 border-r-2 border-gray-300 shadow focus:outline-none hover:bg-gray-200 rounded-r-md sm:gap-2 sm:p-x-6 '>\r\n                                              <button\r\n                                                type='button'\r\n                                                onClick={togglePassword}\r\n                                                className='flex-shrink-0 w-6 h-auto text-indigo-600 focus:outline-none'\r\n                                                aria-hidden='true'>\r\n                                                {passwordShown ? (\r\n                                                  <EyeOffIcon />\r\n                                                ) : (\r\n                                                  <EyeIcon />\r\n                                                )}\r\n                                              </button>\r\n                                            </div>\r\n                                          </span>\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      {meta.error && meta.touched && (\r\n                                        <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                          <div className='flex'>\r\n                                            <div className='flex-shrink-0'>\r\n                                              <XCircleIcon\r\n                                                className='w-5 h-5 text-red-400'\r\n                                                aria-hidden='true'\r\n                                              />\r\n                                            </div>\r\n                                            <div className='ml-3'>\r\n                                              <h3 className='text-sm font-medium text-red-800'>\r\n                                                {meta.error}\r\n                                              </h3>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      )}\r\n                                    </div>\r\n                                  )}\r\n                                </Field>\r\n\r\n                                {submitError && (\r\n                                  <div className='p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md bg-red-50'>\r\n                                    <div className='flex'>\r\n                                      <div className='flex-shrink-0'>\r\n                                        <XCircleIcon\r\n                                          className='w-5 h-5 text-red-400'\r\n                                          aria-hidden='true'\r\n                                        />\r\n                                      </div>\r\n                                      <div className='ml-3'>\r\n                                        <h3 className='text-sm font-medium text-red-800'>\r\n                                          {submitError}\r\n                                        </h3>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n\r\n                              <Field\r\n                                name='notes'\r\n                                component='textarea'\r\n                                placeholder='Enter Notes Here'\r\n                                className='box-border block w-full h-32 p-4 px-4 py-2 pl-1 mb-2 border-4 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                              />\r\n                            </div>\r\n                            <div className='pt-5'>\r\n                              <div className='flex justify-end'>\r\n                                <button\r\n                                  type='button'\r\n                                  className='px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                                  Cancel\r\n                                </button>\r\n                                <button\r\n                                  type='submit'\r\n                                  className='inline-flex justify-center px-4 py-2 ml-3 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                                  Update\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Transition.Child>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditPasswordModal;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { Fragment, useRef, useState } from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { ExclamationIcon } from \"@heroicons/react/outline\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport default function Modal(props) {\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const cancelButtonRef = useRef(null);\r\n\r\n  if (!open) {\r\n    return <Navigate to='/' />;\r\n  }\r\n\r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog\r\n        as='div'\r\n        static\r\n        className='fixed inset-0 z-10 overflow-y-auto'\r\n        initialFocus={cancelButtonRef}\r\n        open={open}\r\n        onClose={setOpen}>\r\n        <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter='ease-out duration-300'\r\n            enterFrom='opacity-0'\r\n            enterTo='opacity-100'\r\n            leave='ease-in duration-200'\r\n            leaveFrom='opacity-100'\r\n            leaveTo='opacity-0'>\r\n            <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-80 ' />\r\n          </Transition.Child>\r\n\r\n          {/* This element is to trick the browser into centering the modal contents. */}\r\n          <span\r\n            className='hidden sm:inline-block sm:align-middle sm:h-screen'\r\n            aria-hidden='true'>\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter='ease-out duration-300'\r\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\r\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\r\n            leave='ease-in duration-200'\r\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\r\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\r\n            <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6'>\r\n              <div className='sm:flex sm:items-start'>\r\n                <div className='flex items-center justify-center flex-shrink-0 w-12 h-12 mx-auto bg-red-100 rounded-full sm:mx-0 sm:h-10 sm:w-10'>\r\n                  <ExclamationIcon\r\n                    className='w-6 h-6 text-red-600'\r\n                    aria-hidden='true'\r\n                  />\r\n                </div>\r\n                <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\r\n                  <Dialog.Title\r\n                    as='h3'\r\n                    className='text-lg font-medium leading-6 text-gray-900'>\r\n                    {props.title}\r\n                  </Dialog.Title>\r\n                  <div className='mt-2'>\r\n                    <p className='text-sm text-gray-500'>{props.content}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='mt-5 sm:mt-4 sm:flex sm:flex-row-reverse'>\r\n                {props.actions}\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\n","/** @format */\r\nimport React from \"react\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\n\r\n//REDUX\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { deletePassword } from \"../../actions/passwordActions\";\r\nimport { PASSWORD_DELETE_RESET } from \"../../constants/passwordConstants\";\r\nimport algoliasearch from \"algoliasearch\";\r\n\r\nimport StandardModal from \"./StandardModal\";\r\n\r\nconst searchClient = algoliasearch(\r\n  \"51L3TF5D2J\",\r\n  \"07b0d27bbe4fa6321f738856d02293fd\"\r\n);\r\nconst passwordIndex = searchClient.initIndex(\"passwordsMERN\");\r\n\r\nconst DeletePasswordModal = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const passwordId = useParams();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = useState(true);\r\n  const cancelButtonRef = useRef(null);\r\n\r\n  const passwordDelete = useSelector((state) => state.passwordDelete);\r\n  const {\r\n    // loading: loadingDelete,\r\n    // error: errorDelete,\r\n    success: successDelete,\r\n  } = passwordDelete;\r\n  const passwordDetails = useSelector((state) => state.passwordDetails);\r\n  const { password } = passwordDetails;\r\n\r\n  useEffect(() => {\r\n    if (successDelete) {\r\n      dispatch({ type: PASSWORD_DELETE_RESET });\r\n      navigate(\"/\");\r\n    }\r\n  }, [dispatch, history, passwordId, password, successDelete, navigate]);\r\n\r\n  if (!open) {\r\n    return <Navigate to='/' />;\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    dispatch(deletePassword(id));\r\n    passwordIndex.deleteObject(id);\r\n  };\r\n\r\n  const actions = (\r\n    <React.Fragment>\r\n      <button\r\n        type='button'\r\n        className='inline-flex justify-center w-full px-4 py-2 text-base font-medium text-white bg-red-600 border border-transparent rounded-md shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm'\r\n        onClick={() => deleteHandler(passwordId.id)}>\r\n        Delete\r\n      </button>\r\n      <Link\r\n        to='/passwords'\r\n        type='button'\r\n        className='inline-flex justify-center w-full px-4 py-2 mt-3 text-base font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:w-auto sm:text-sm'\r\n        onClick={() => setOpen(false)}\r\n        ref={cancelButtonRef}>\r\n        Cancel\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <StandardModal\r\n        title='Delete Password'\r\n        content='Are you sure you want to delete this password?'\r\n        actions={actions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeletePasswordModal;\r\n","/** @format */\r\n\r\nimport { Fragment, useState, useRef } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { XCircleIcon } from \"@heroicons/react/solid\";\r\n\r\nimport \"react-phone-number-input/style.css\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\n\r\nimport DatePicker from \"react-date-picker\";\r\n\r\nconst required = (value) => (value ? undefined : \"Required\");\r\n\r\nconst AddAddressModal = () => {\r\n  const [open, setOpen] = useState(true);\r\n  const [value, setValue] = useState();\r\n  const cancelButtonRef = useRef(null);\r\n  const [dateValue, onChange] = useState(new Date());\r\n  if (!open) {\r\n    return <Navigate to='/' />;\r\n  }\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Transition.Root show={open} as={Fragment}>\r\n        <Dialog\r\n          as='div'\r\n          static\r\n          className='fixed inset-0 z-10 overflow-y-auto'\r\n          initialFocus={cancelButtonRef}\r\n          open={open}\r\n          onClose={setOpen}>\r\n          <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\r\n            <div className='flex-auto'>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-out duration-300'\r\n                enterFrom='opacity-0'\r\n                enterTo='opacity-100'\r\n                leave='ease-in duration-200'\r\n                leaveFrom='opacity-100'\r\n                leaveTo='opacity-0'>\r\n                <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 ' />\r\n              </Transition.Child>\r\n\r\n              {/* This element is to trick the browser into centering the modal contents. */}\r\n              <span\r\n                className='hidden sm:inline-block sm:align-middle sm:h-screen'\r\n                aria-hidden='true'>\r\n                &#8203;\r\n              </span>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-out duration-300'\r\n                enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\r\n                enterTo='opacity-100 translate-y-0 sm:scale-100'\r\n                leave='ease-in duration-200'\r\n                leaveFrom='opacity-100 translate-y-0 sm:scale-100'\r\n                leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\r\n                {/* This controls the actual width of modal based on responsive design */}\r\n                <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-gray-100 rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6 lg:max-w-5xl'>\r\n                  <div className='px-4 py-5 sm:p-6'>\r\n                    <h3 className='p-2 space-y-8 text-lg font-medium leading-6 text-gray-800 bg-yellow-500 border-gray-300 divide-y divide-gray-200 shadow-sm border-3 rounded-t-md sm:space-y-5'>\r\n                      Add an Address\r\n                    </h3>\r\n\r\n                    <Form\r\n                      onSubmit={onSubmit}\r\n                      validate={(values) => {\r\n                        const errors = {};\r\n                        if (values.email !== \"undefined\") {\r\n                          var pattern = new RegExp(\r\n                            /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n                          );\r\n\r\n                          if (!pattern.test(values.email)) {\r\n                            errors.email = \"Please enter valid email address.\";\r\n                          }\r\n                        }\r\n                        return errors;\r\n                      }}\r\n                      render={({ handleSubmit, submitError }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                          <div className='space-y-6'>\r\n                            <div className='px-4 py-5 bg-white border-gray-100 shadow sm:overflow-hidden border-1 lg:rounded-b-md sm:rounded-b-md rounded-b-md sm:p-6'>\r\n                              <div className='md:grid md:grid-cols-3 md:gap-6 '>\r\n                                <div className='col-span-1 '>\r\n                                  <Field\r\n                                    name='name'\r\n                                    component='input'\r\n                                    placeholder='Enter Name for This Address'\r\n                                    validate={required}>\r\n                                    {({ input, meta, placeholder }) => (\r\n                                      <div className='col-span-6 sm:col-span-3'>\r\n                                        <div>\r\n                                          <label\r\n                                            htmlFor='first-name'\r\n                                            className='block font-medium text-gray-700 text-md'>\r\n                                            Name\r\n                                          </label>\r\n                                          <input\r\n                                            type='text'\r\n                                            {...input}\r\n                                            placeholder={placeholder}\r\n                                            className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                          />\r\n                                        </div>\r\n                                        {meta.error && meta.touched && (\r\n                                          <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                            <div className='flex'>\r\n                                              <div className='flex-shrink-0'>\r\n                                                <XCircleIcon\r\n                                                  className='w-5 h-5 text-red-400'\r\n                                                  aria-hidden='true'\r\n                                                />\r\n                                              </div>\r\n                                              <div className='ml-3'>\r\n                                                <h3 className='text-sm font-medium text-red-800'>\r\n                                                  {meta.error}\r\n                                                </h3>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        )}\r\n                                      </div>\r\n                                    )}\r\n                                  </Field>\r\n\r\n                                  <div className='pt-3'>\r\n                                    <label className='block font-medium text-gray-700 text-md'>\r\n                                      Attachments\r\n                                    </label>\r\n                                    <div className='flex justify-center px-6 pt-5 pb-6 mt-1 border border-gray-300 border-dashed rounded-md'>\r\n                                      <div className='space-y-1 text-center'>\r\n                                        <svg\r\n                                          className='w-12 h-12 mx-auto text-gray-400'\r\n                                          stroke='currentColor'\r\n                                          fill='none'\r\n                                          viewBox='0 0 48 48'\r\n                                          aria-hidden='true'>\r\n                                          <path\r\n                                            d='M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02'\r\n                                            strokeWidth={2}\r\n                                            strokeLinecap='round'\r\n                                            strokeLinejoin='round'\r\n                                          />\r\n                                        </svg>\r\n                                        <div className='flex text-sm text-gray-600'>\r\n                                          <label\r\n                                            htmlFor='file-upload'\r\n                                            className='relative font-medium text-indigo-600 bg-white rounded-md cursor-pointer hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500'>\r\n                                            <span>Upload a file</span>\r\n                                            <input\r\n                                              id='file-upload'\r\n                                              name='file-upload'\r\n                                              type='file'\r\n                                              className='sr-only'\r\n                                            />\r\n                                          </label>\r\n                                          <p className='pl-1'>\r\n                                            or drag and drop\r\n                                          </p>\r\n                                        </div>\r\n                                        <p className='text-xs text-gray-500'>\r\n                                          PNG, JPG, GIF up to 10MB\r\n                                        </p>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                {/* ///////////////////////////Information Fill Out/////////////////////// */}\r\n\r\n                                <div className='col-span-1 pb-6 mt-5 md:mt-0 md:col-span-2 '>\r\n                                  <div className='mt-5 md:mt-0 md:col-span-2'>\r\n                                    <div className='overflow-hidden shadow sm:rounded-md'>\r\n                                      <div className='px-4 py-5 bg-white sm:p-6'>\r\n                                        <div className='grid grid-cols-6 gap-6 md:col-span-1'>\r\n                                          <div className='block col-span-6 text-xl underline sm:col-span-6 lg:col-span-6'>\r\n                                            Basic Information\r\n                                          </div>\r\n                                          <div className='col-span-6 sm:col-span-3'>\r\n                                            <Field\r\n                                              name='firstName'\r\n                                              component='input'\r\n                                              placeholder='First Name'\r\n                                              validate={required}>\r\n                                              {({\r\n                                                input,\r\n                                                meta,\r\n                                                placeholder,\r\n                                              }) => (\r\n                                                <div className='col-span-6 sm:col-span-3'>\r\n                                                  <div>\r\n                                                    <label\r\n                                                      htmlFor='first-name'\r\n                                                      className='block font-medium text-gray-700 text-md'>\r\n                                                      First Name\r\n                                                    </label>\r\n                                                    <input\r\n                                                      type='text'\r\n                                                      {...input}\r\n                                                      placeholder={placeholder}\r\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                                    />\r\n                                                  </div>\r\n                                                  {meta.error && meta.touched && (\r\n                                                    <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                                      <div className='flex'>\r\n                                                        <div className='flex-shrink-0'>\r\n                                                          <XCircleIcon\r\n                                                            className='w-5 h-5 text-red-400'\r\n                                                            aria-hidden='true'\r\n                                                          />\r\n                                                        </div>\r\n                                                        <div className='ml-3'>\r\n                                                          <h3 className='text-sm font-medium text-red-800'>\r\n                                                            {meta.error}\r\n                                                          </h3>\r\n                                                        </div>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  )}\r\n                                                </div>\r\n                                              )}\r\n                                            </Field>\r\n                                          </div>\r\n                                          <div className='col-span-6 sm:col-span-3'>\r\n                                            <Field\r\n                                              name='lastName'\r\n                                              component='input'\r\n                                              placeholder='Last Name'\r\n                                              validate={required}>\r\n                                              {({\r\n                                                input,\r\n                                                meta,\r\n                                                placeholder,\r\n                                              }) => (\r\n                                                <div className='col-span-1 sm:col-span-3'>\r\n                                                  <div>\r\n                                                    <label\r\n                                                      htmlFor='first-name'\r\n                                                      className='block font-medium text-gray-700 text-md'>\r\n                                                      Last Name\r\n                                                    </label>\r\n                                                    <input\r\n                                                      type='text'\r\n                                                      {...input}\r\n                                                      placeholder={placeholder}\r\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                                    />\r\n                                                  </div>\r\n                                                  {meta.error && meta.touched && (\r\n                                                    <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                                      <div className='flex'>\r\n                                                        <div className='flex-shrink-0'>\r\n                                                          <XCircleIcon\r\n                                                            className='w-5 h-5 text-red-400'\r\n                                                            aria-hidden='true'\r\n                                                          />\r\n                                                        </div>\r\n                                                        <div className='ml-3'>\r\n                                                          <h3 className='text-sm font-medium text-red-800'>\r\n                                                            {meta.error}\r\n                                                          </h3>\r\n                                                        </div>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  )}\r\n                                                </div>\r\n                                              )}\r\n                                            </Field>\r\n                                          </div>\r\n                                          <div className='col-span-6 sm:col-span-4'>\r\n                                            <Field\r\n                                              name='email'\r\n                                              component='input'\r\n                                              placeholder='E-mail Address'\r\n                                              validate={required}>\r\n                                              {({\r\n                                                input,\r\n                                                meta,\r\n                                                placeholder,\r\n                                              }) => (\r\n                                                <div className='col-span-6 sm:col-span-3'>\r\n                                                  <div>\r\n                                                    <label\r\n                                                      htmlFor='first-name'\r\n                                                      className='block font-medium text-gray-700 text-md'>\r\n                                                      E-mail Address\r\n                                                    </label>\r\n                                                    <input\r\n                                                      type='text'\r\n                                                      {...input}\r\n                                                      placeholder={placeholder}\r\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                                    />\r\n                                                  </div>\r\n                                                  {meta.error && meta.touched && (\r\n                                                    <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                                      <div className='flex'>\r\n                                                        <div className='flex-shrink-0'>\r\n                                                          <XCircleIcon\r\n                                                            className='w-5 h-5 text-red-400'\r\n                                                            aria-hidden='true'\r\n                                                          />\r\n                                                        </div>\r\n                                                        <div className='ml-3'>\r\n                                                          <h3 className='text-sm font-medium text-red-800'>\r\n                                                            {meta.error}\r\n                                                          </h3>\r\n                                                        </div>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  )}\r\n                                                </div>\r\n                                              )}\r\n                                            </Field>\r\n                                          </div>\r\n                                          <div className='col-span-6 sm:col-span-3'>\r\n                                            <label\r\n                                              htmlFor='country'\r\n                                              className='block text-sm font-medium text-gray-700'>\r\n                                              Country / Region\r\n                                            </label>\r\n                                            <select\r\n                                              id='country'\r\n                                              name='country'\r\n                                              autoComplete='country'\r\n                                              className='block w-full px-3 py-2 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'>\r\n                                              <option>United States</option>\r\n                                              <option>Canada</option>\r\n                                              <option>Mexico</option>\r\n                                            </select>\r\n                                          </div>\r\n                                          <div className='col-span-6'>\r\n                                            <Field\r\n                                              name='street'\r\n                                              component='input'\r\n                                              placeholder='Street Address'\r\n                                              validate={required}>\r\n                                              {({\r\n                                                input,\r\n                                                meta,\r\n                                                placeholder,\r\n                                              }) => (\r\n                                                <div className='col-span-6 sm:col-span-3'>\r\n                                                  <div>\r\n                                                    <label\r\n                                                      htmlFor='first-name'\r\n                                                      className='block font-medium text-gray-700 text-md'>\r\n                                                      Street Address\r\n                                                    </label>\r\n                                                    <input\r\n                                                      type='text'\r\n                                                      {...input}\r\n                                                      placeholder={placeholder}\r\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                                    />\r\n                                                  </div>\r\n                                                  {meta.error && meta.touched && (\r\n                                                    <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                                      <div className='flex'>\r\n                                                        <div className='flex-shrink-0'>\r\n                                                          <XCircleIcon\r\n                                                            className='w-5 h-5 text-red-400'\r\n                                                            aria-hidden='true'\r\n                                                          />\r\n                                                        </div>\r\n                                                        <div className='ml-3'>\r\n                                                          <h3 className='text-sm font-medium text-red-800'>\r\n                                                            {meta.error}\r\n                                                          </h3>\r\n                                                        </div>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  )}\r\n                                                </div>\r\n                                              )}\r\n                                            </Field>\r\n                                          </div>\r\n                                          <div className='col-span-6 sm:col-span-6 lg:col-span-2'>\r\n                                            <Field\r\n                                              name='city'\r\n                                              component='input'\r\n                                              placeholder='City'\r\n                                              validate={required}>\r\n                                              {({\r\n                                                input,\r\n                                                meta,\r\n                                                placeholder,\r\n                                              }) => (\r\n                                                <div className='col-span-6 sm:col-span-3'>\r\n                                                  <div>\r\n                                                    <label\r\n                                                      htmlFor='first-name'\r\n                                                      className='block font-medium text-gray-700 text-md'>\r\n                                                      City\r\n                                                    </label>\r\n                                                    <input\r\n                                                      type='text'\r\n                                                      {...input}\r\n                                                      placeholder={placeholder}\r\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                                    />\r\n                                                  </div>\r\n                                                  {meta.error && meta.touched && (\r\n                                                    <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                                      <div className='flex'>\r\n                                                        <div className='flex-shrink-0'>\r\n                                                          <XCircleIcon\r\n                                                            className='w-5 h-5 text-red-400'\r\n                                                            aria-hidden='true'\r\n                                                          />\r\n                                                        </div>\r\n                                                        <div className='ml-3'>\r\n                                                          <h3 className='text-sm font-medium text-red-800'>\r\n                                                            {meta.error}\r\n                                                          </h3>\r\n                                                        </div>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  )}\r\n                                                </div>\r\n                                              )}\r\n                                            </Field>\r\n                                          </div>\r\n                                          <div className='col-span-6 sm:col-span-3 lg:col-span-2'>\r\n                                            <Field\r\n                                              name='state'\r\n                                              component='input'\r\n                                              placeholder='State/Province'\r\n                                              validate={required}>\r\n                                              {({\r\n                                                input,\r\n                                                meta,\r\n                                                placeholder,\r\n                                              }) => (\r\n                                                <div className='col-span-6 sm:col-span-3'>\r\n                                                  <div>\r\n                                                    <label\r\n                                                      htmlFor='first-name'\r\n                                                      className='block font-medium text-gray-700 text-md'>\r\n                                                      State/Province\r\n                                                    </label>\r\n                                                    <input\r\n                                                      type='text'\r\n                                                      {...input}\r\n                                                      placeholder={placeholder}\r\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                                    />\r\n                                                  </div>\r\n                                                  {meta.error && meta.touched && (\r\n                                                    <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                                      <div className='flex'>\r\n                                                        <div className='flex-shrink-0'>\r\n                                                          <XCircleIcon\r\n                                                            className='w-5 h-5 text-red-400'\r\n                                                            aria-hidden='true'\r\n                                                          />\r\n                                                        </div>\r\n                                                        <div className='ml-3'>\r\n                                                          <h3 className='text-sm font-medium text-red-800'>\r\n                                                            {meta.error}\r\n                                                          </h3>\r\n                                                        </div>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  )}\r\n                                                </div>\r\n                                              )}\r\n                                            </Field>\r\n                                          </div>\r\n                                          <div className='col-span-6 sm:col-span-3 lg:col-span-2'>\r\n                                            <Field\r\n                                              name='zip'\r\n                                              component='input'\r\n                                              placeholder='ZIP / Postal'\r\n                                              validate={required}>\r\n                                              {({\r\n                                                input,\r\n                                                meta,\r\n                                                placeholder,\r\n                                              }) => (\r\n                                                <div className='col-span-6 sm:col-span-3'>\r\n                                                  <div>\r\n                                                    <label\r\n                                                      htmlFor='first-name'\r\n                                                      className='block font-medium text-gray-700 text-md'>\r\n                                                      ZIP/Postal\r\n                                                    </label>\r\n                                                    <input\r\n                                                      type='text'\r\n                                                      {...input}\r\n                                                      placeholder={placeholder}\r\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                                    />\r\n                                                  </div>\r\n                                                  {meta.error && meta.touched && (\r\n                                                    <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                                      <div className='flex'>\r\n                                                        <div className='flex-shrink-0'>\r\n                                                          <XCircleIcon\r\n                                                            className='w-5 h-5 text-red-400'\r\n                                                            aria-hidden='true'\r\n                                                          />\r\n                                                        </div>\r\n                                                        <div className='ml-3'>\r\n                                                          <h3 className='text-sm font-medium text-red-800'>\r\n                                                            {meta.error}\r\n                                                          </h3>\r\n                                                        </div>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  )}\r\n                                                </div>\r\n                                              )}\r\n                                            </Field>\r\n                                          </div>\r\n\r\n                                          <div className='col-span-6 sm:col-span-4'>\r\n                                            <Field\r\n                                              name='phone'\r\n                                              component='input'\r\n                                              placeholder='Enter Phone Number'\r\n                                              validate={required}>\r\n                                              {({\r\n                                                input,\r\n                                                meta,\r\n                                                placeholder,\r\n                                              }) => (\r\n                                                <div className='col-span-6 sm:col-span-3'>\r\n                                                  <div>\r\n                                                    <label\r\n                                                      htmlFor='first-name'\r\n                                                      className='block font-medium text-gray-700 text-md'>\r\n                                                      Phone Number\r\n                                                    </label>\r\n                                                    <PhoneInput\r\n                                                      type='text'\r\n                                                      defaultCountry='US'\r\n                                                      {...input}\r\n                                                      placeholder={placeholder}\r\n                                                      value={value}\r\n                                                      onChange={setValue}\r\n                                                    />\r\n                                                  </div>\r\n                                                </div>\r\n                                              )}\r\n                                            </Field>\r\n                                          </div>\r\n\r\n                                          {/* //DATEPICKER */}\r\n\r\n                                          <div className='col-span-6 sm:col-span-4'>\r\n                                            <Field\r\n                                              name='birtday'\r\n                                              component='input'\r\n                                              placeholder=''\r\n                                              validate={required}>\r\n                                              {({\r\n                                                input,\r\n                                                meta,\r\n                                                placeholder,\r\n                                              }) => (\r\n                                                <div className='col-span-6 sm:col-span-3'>\r\n                                                  <label\r\n                                                    htmlFor='country'\r\n                                                    className='block text-sm font-medium text-gray-700'>\r\n                                                    Birthday\r\n                                                  </label>\r\n                                                  <div className='col-span-6'>\r\n                                                    <DatePicker\r\n                                                      className='block w-full px-4 py-2 pl-1 mb-2 border border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                                      onChange={onChange}\r\n                                                      value={dateValue}\r\n                                                    />\r\n                                                  </div>\r\n                                                </div>\r\n                                              )}\r\n                                            </Field>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <hr />\r\n                              <div className='flex justify-end pt-5'>\r\n                                <button\r\n                                  type='button'\r\n                                  className='px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                                  Cancel\r\n                                </button>\r\n                                <button\r\n                                  type='submit'\r\n                                  className='inline-flex justify-center px-4 py-2 ml-3 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                                  Save\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Transition.Child>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddAddressModal;\r\n","/** @format */\r\n\r\nimport { Fragment, useState, useRef, useEffect } from \"react\";\r\n\r\n//Final Form\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { XCircleIcon } from \"@heroicons/react/solid\";\r\n\r\n//Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNote } from \"../../actions/noteActions\";\r\nimport { NOTE_CREATE_RESET } from \"../../constants/noteConstants\";\r\nimport { getUserDetails } from \"../../actions/userActions\";\r\nimport { useNavigate, Link, useParams } from \"react-router-dom\";\r\n\r\nconst required = (value) => (value ? undefined : \"Required\");\r\n\r\nconst AddNoteModal = () => {\r\n  const dispatch = useDispatch();\r\n  const noteId = useParams();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const cancelButtonRef = useRef(null);\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n  const { success: successNoteCreate, note: createdNote } = noteCreate;\r\n  const noteDetails = useSelector((state) => state.noteDetails);\r\n  const { note } = noteDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: NOTE_CREATE_RESET });\r\n    dispatch(getUserDetails(\"profile\"));\r\n    // console.log(user._id);\r\n    if (successNoteCreate) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [dispatch, noteId, note, successNoteCreate, createdNote, user, navigate]);\r\n\r\n  if (!open) {\r\n    navigate(\"/\");\r\n  }\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(createNote(values));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Transition.Root show={open} as={Fragment}>\r\n        <Dialog\r\n          as='div'\r\n          static\r\n          className='fixed inset-0 z-10 overflow-y-auto'\r\n          initialFocus={cancelButtonRef}\r\n          open={open}\r\n          onClose={setOpen}>\r\n          <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\r\n            <div className='flex-auto'>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-out duration-300'\r\n                enterFrom='opacity-0'\r\n                enterTo='opacity-100'\r\n                leave='ease-in duration-200'\r\n                leaveFrom='opacity-100'\r\n                leaveTo='opacity-0'>\r\n                <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 ' />\r\n              </Transition.Child>\r\n\r\n              {/* This element is to trick the browser into centering the modal contents. */}\r\n              <span\r\n                className='hidden sm:inline-block sm:align-middle sm:h-screen'\r\n                aria-hidden='true'>\r\n                &#8203;\r\n              </span>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-out duration-300'\r\n                enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\r\n                enterTo='opacity-100 translate-y-0 sm:scale-100'\r\n                leave='ease-in duration-200'\r\n                leaveFrom='opacity-100 translate-y-0 sm:scale-100'\r\n                leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\r\n                {/* This controls the actual width of modal based on responsive design */}\r\n                <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-gray-100 rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6 lg:max-w-5xl'>\r\n                  <div className='px-4 py-5 sm:p-6'>\r\n                    <h3 className='p-2 space-y-8 text-lg font-medium leading-6 text-gray-800 bg-yellow-500 border-gray-300 divide-y divide-gray-200 shadow-sm border-3 rounded-t-md sm:space-y-5'>\r\n                      Add a Secure Note\r\n                    </h3>\r\n                    <hr />\r\n\r\n                    <Form\r\n                      onSubmit={onSubmit}\r\n                      render={({ handleSubmit, submitError }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                          <div className='space-y-6'>\r\n                            <div className='px-4 py-5 bg-white shadow lg:rounded-b-md sm:rounded-b-md sm:p-6'>\r\n                              <div className='md:grid md:grid-cols-3 md:gap-6'>\r\n                                <div className='md:col-span-1'>\r\n                                  <Field\r\n                                    name='title'\r\n                                    component='input'\r\n                                    placeholder='Enter Name for This Note'\r\n                                    validate={required}>\r\n                                    {({ input, meta, placeholder }) => (\r\n                                      <div className='col-span-6 sm:col-span-3'>\r\n                                        <div>\r\n                                          <label\r\n                                            htmlFor='first-name'\r\n                                            className='block font-medium text-gray-700 text-md'>\r\n                                            Title\r\n                                          </label>\r\n                                          <input\r\n                                            type='text'\r\n                                            {...input}\r\n                                            placeholder={placeholder}\r\n                                            className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                          />\r\n                                        </div>\r\n                                        {meta.error && meta.touched && (\r\n                                          <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                            <div className='flex'>\r\n                                              <div className='flex-shrink-0'>\r\n                                                <XCircleIcon\r\n                                                  className='w-5 h-5 text-red-400'\r\n                                                  aria-hidden='true'\r\n                                                />\r\n                                              </div>\r\n                                              <div className='ml-3'>\r\n                                                <h3 className='text-sm font-medium text-red-800'>\r\n                                                  {meta.error}\r\n                                                </h3>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        )}\r\n                                      </div>\r\n                                    )}\r\n                                  </Field>\r\n\r\n                                  <div className='pt-3'>\r\n                                    <label className='block font-medium text-gray-700 text-md'>\r\n                                      Attachments\r\n                                    </label>\r\n                                    <div className='flex justify-center px-6 pt-5 pb-6 mt-1 border-2 border-gray-300 border-dashed rounded-md'>\r\n                                      <div className='space-y-1 text-center'>\r\n                                        <svg\r\n                                          className='w-12 h-12 mx-auto text-gray-400'\r\n                                          stroke='currentColor'\r\n                                          fill='none'\r\n                                          viewBox='0 0 48 48'\r\n                                          aria-hidden='true'>\r\n                                          <path\r\n                                            d='M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02'\r\n                                            strokeWidth={2}\r\n                                            strokeLinecap='round'\r\n                                            strokeLinejoin='round'\r\n                                          />\r\n                                        </svg>\r\n                                        <div className='flex text-sm text-gray-600'>\r\n                                          <label\r\n                                            htmlFor='file-upload'\r\n                                            className='relative font-medium text-indigo-600 bg-white rounded-md cursor-pointer hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500'>\r\n                                            <span>Upload a file</span>\r\n                                            <input\r\n                                              id='file-upload'\r\n                                              name='noteImage'\r\n                                              type='file'\r\n                                              className='sr-only'\r\n                                            />\r\n                                          </label>\r\n                                          <p className='pl-1'>\r\n                                            or drag and drop\r\n                                          </p>\r\n                                        </div>\r\n                                        <p className='text-xs text-gray-500'>\r\n                                          PNG, JPG, GIF up to 10MB\r\n                                        </p>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className='pb-6 mt-5 md:mt-0 md:col-span-2'>\r\n                                  <Field\r\n                                    name='caption'\r\n                                    component='textarea'\r\n                                    placeholder='Enter a Caption for This Note'\r\n                                    className='block w-full p-2 border border-gray-300 rounded-md shadow-sm h-96 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'\r\n                                    validate={required}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <hr />\r\n                              <div className='flex justify-end pt-5'>\r\n                                <Link\r\n                                  to='/notes'\r\n                                  type='button'\r\n                                  className='px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                                  Cancel\r\n                                </Link>\r\n                                <button\r\n                                  type='submit'\r\n                                  className='inline-flex justify-center px-4 py-2 ml-3 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                                  Save\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Transition.Child>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddNoteModal;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { Fragment, useState, useEffect, useRef } from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\n\r\nimport { XCircleIcon } from \"@heroicons/react/solid\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useParams, useNavigate, Link } from \"react-router-dom\";\r\nimport { listNoteDetails, updateNote } from \"../../actions/noteActions\";\r\nimport { NOTE_UPDATE_RESET } from \"../../constants/noteConstants\";\r\n\r\nconst required = (value) => (value ? undefined : \"Required\");\r\n\r\nconst EditNoteModal = () => {\r\n  const dispatch = useDispatch();\r\n  const noteId = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [open, setOpen] = useState(true);\r\n  const cancelButtonRef = useRef(null);\r\n\r\n  const noteDetails = useSelector((state) => state.noteDetails);\r\n  const { note } = noteDetails;\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { success } = noteUpdate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      dispatch({ type: NOTE_UPDATE_RESET });\r\n      navigate(\"/notes\");\r\n    } else {\r\n      if (!note.name || note._id !== noteId) {\r\n        dispatch(listNoteDetails(noteId.id));\r\n      } else {\r\n      }\r\n    }\r\n  }, [dispatch, noteId, note, success, navigate]);\r\n  let formData = {\r\n    title: note.title,\r\n    caption: note.caption,\r\n    image: note.image,\r\n  };\r\n\r\n  if (!open) {\r\n    return <Navigate to='/' />;\r\n  }\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(updateNote({ _id: noteId.id, values }));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Transition.Root show={open} as={Fragment}>\r\n        <Dialog\r\n          as='div'\r\n          static\r\n          className='fixed inset-0 z-10 overflow-y-auto'\r\n          initialFocus={cancelButtonRef}\r\n          open={open}\r\n          onClose={setOpen}>\r\n          <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\r\n            <div className='flex-auto'>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-out duration-300'\r\n                enterFrom='opacity-0'\r\n                enterTo='opacity-100'\r\n                leave='ease-in duration-200'\r\n                leaveFrom='opacity-100'\r\n                leaveTo='opacity-0'>\r\n                <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 ' />\r\n              </Transition.Child>\r\n\r\n              {/* This element is to trick the browser into centering the modal contents. */}\r\n              <span\r\n                className='hidden sm:inline-block sm:align-middle sm:h-screen'\r\n                aria-hidden='true'>\r\n                &#8203;\r\n              </span>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-out duration-300'\r\n                enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\r\n                enterTo='opacity-100 translate-y-0 sm:scale-100'\r\n                leave='ease-in duration-200'\r\n                leaveFrom='opacity-100 translate-y-0 sm:scale-100'\r\n                leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\r\n                {/* This controls the actual width of modal based on responsive design */}\r\n                <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-gray-100 rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6 lg:max-w-5xl'>\r\n                  <div className='px-4 py-5 sm:p-6'>\r\n                    <h3 className='p-2 space-y-8 text-lg font-medium leading-6 text-gray-800 bg-yellow-500 border-2 border-gray-300 divide-y divide-gray-200 shadow-lg rounded-t-md sm:space-y-5'>\r\n                      Edit Password\r\n                    </h3>\r\n                    <hr />\r\n\r\n                    <Form\r\n                      onSubmit={onSubmit}\r\n                      initialValues={{\r\n                        ...formData,\r\n                      }}\r\n                      render={({ handleSubmit, submitError }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                          <div className='space-y-6'>\r\n                            <div className='px-4 py-5 bg-white shadow lg:rounded-b-md sm:rounded-b-md sm:p-6'>\r\n                              <div className='md:grid md:grid-cols-3 md:gap-6'>\r\n                                <div className='md:col-span-1'>\r\n                                  <Field\r\n                                    name='title'\r\n                                    component='input'\r\n                                    placeholder='Enter Name for This Note'\r\n                                    validate={required}>\r\n                                    {({ input, meta, placeholder }) => (\r\n                                      <div className='col-span-6 sm:col-span-3'>\r\n                                        <div>\r\n                                          <label\r\n                                            htmlFor='first-name'\r\n                                            className='block font-medium text-gray-700 text-md'>\r\n                                            Title\r\n                                          </label>\r\n                                          <input\r\n                                            type='text'\r\n                                            {...input}\r\n                                            placeholder={placeholder}\r\n                                            className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\r\n                                          />\r\n                                        </div>\r\n                                        {meta.error && meta.touched && (\r\n                                          <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                            <div className='flex'>\r\n                                              <div className='flex-shrink-0'>\r\n                                                <XCircleIcon\r\n                                                  className='w-5 h-5 text-red-400'\r\n                                                  aria-hidden='true'\r\n                                                />\r\n                                              </div>\r\n                                              <div className='ml-3'>\r\n                                                <h3 className='text-sm font-medium text-red-800'>\r\n                                                  {meta.error}\r\n                                                </h3>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        )}\r\n                                      </div>\r\n                                    )}\r\n                                  </Field>\r\n\r\n                                  <div className='pt-3'>\r\n                                    <label className='block font-medium text-gray-700 text-md'>\r\n                                      Attachments\r\n                                    </label>\r\n                                    <div className='flex justify-center px-6 pt-5 pb-6 mt-1 border-2 border-gray-300 border-dashed rounded-md'>\r\n                                      <div className='space-y-1 text-center'>\r\n                                        <svg\r\n                                          className='w-12 h-12 mx-auto text-gray-400'\r\n                                          stroke='currentColor'\r\n                                          fill='none'\r\n                                          viewBox='0 0 48 48'\r\n                                          aria-hidden='true'>\r\n                                          <path\r\n                                            d='M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02'\r\n                                            strokeWidth={2}\r\n                                            strokeLinecap='round'\r\n                                            strokeLinejoin='round'\r\n                                          />\r\n                                        </svg>\r\n                                        <div className='flex text-sm text-gray-600'>\r\n                                          <label\r\n                                            htmlFor='file-upload'\r\n                                            className='relative font-medium text-indigo-600 bg-white rounded-md cursor-pointer hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500'>\r\n                                            <span>Upload a file</span>\r\n                                            <input\r\n                                              id='file-upload'\r\n                                              name='noteImage'\r\n                                              type='file'\r\n                                              className='sr-only'\r\n                                            />\r\n                                          </label>\r\n                                          <p className='pl-1'>\r\n                                            or drag and drop\r\n                                          </p>\r\n                                        </div>\r\n                                        <p className='text-xs text-gray-500'>\r\n                                          PNG, JPG, GIF up to 10MB\r\n                                        </p>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className='pb-6 mt-5 md:mt-0 md:col-span-2'>\r\n                                  <Field\r\n                                    name='caption'\r\n                                    component='textarea'\r\n                                    placeholder='Enter a Caption for This Note'\r\n                                    className='block w-full p-2 border border-gray-300 rounded-md shadow-sm h-96 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'\r\n                                    validate={required}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <hr />\r\n                              <div className='flex justify-end pt-5'>\r\n                                <Link\r\n                                  to='/notes'\r\n                                  type='button'\r\n                                  className='px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                                  Cancel\r\n                                </Link>\r\n                                <button\r\n                                  type='submit'\r\n                                  className='inline-flex justify-center px-4 py-2 ml-3 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                                  Save\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Transition.Child>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditNoteModal;\r\n","/** @format */\r\nimport React from \"react\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\n\r\n//REDUX\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { deleteNote } from \"../../actions/noteActions\";\r\nimport { NOTE_DELETE_RESET } from \"../../constants/noteConstants\";\r\n\r\nimport StandardModal from \"./StandardModal\";\r\n\r\nconst DeleteNoteModal = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const noteId = useParams();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = useState(true);\r\n  const cancelButtonRef = useRef(null);\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const {\r\n    // loading: loadingDelete,\r\n    // error: errorDelete,\r\n    success: successDelete,\r\n  } = noteDelete;\r\n  const noteDetails = useSelector((state) => state.noteDetails);\r\n  const { note } = noteDetails;\r\n\r\n  useEffect(() => {\r\n    if (successDelete) {\r\n      dispatch({ type: NOTE_DELETE_RESET });\r\n      navigate(\"/\");\r\n    }\r\n  }, [dispatch, history, noteId, note, successDelete, navigate]);\r\n\r\n  if (!open) {\r\n    return <Navigate to='/' />;\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    dispatch(deleteNote(id));\r\n  };\r\n\r\n  const actions = (\r\n    <React.Fragment>\r\n      <button\r\n        type='button'\r\n        className='inline-flex justify-center w-full px-4 py-2 text-base font-medium text-white bg-red-600 border border-transparent rounded-md shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm'\r\n        onClick={() => deleteHandler(noteId.id)}>\r\n        Delete\r\n      </button>\r\n      <Link\r\n        to='/notes'\r\n        type='button'\r\n        className='inline-flex justify-center w-full px-4 py-2 mt-3 text-base font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:w-auto sm:text-sm'\r\n        onClick={() => setOpen(false)}\r\n        ref={cancelButtonRef}>\r\n        Cancel\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <StandardModal\r\n        title='Delete Password'\r\n        content='Are you sure you want to delete this note?'\r\n        actions={actions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteNoteModal;\r\n","/** @format */\r\n\r\nimport React, { useEffect } from \"react\";\r\n\r\n//Hero Icons\r\nimport { LockClosedIcon } from \"@heroicons/react/solid\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\n//Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../../actions/userActions\";\r\n\r\n//Final Form\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { XCircleIcon } from \"@heroicons/react/solid\";\r\nimport { FORM_ERROR } from \"final-form\";\r\n\r\nconst required = (value) => (value ? undefined : \"Required\");\r\n\r\nconst LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(\"/dashboard\");\r\n    }\r\n  }, [userInfo, navigate]);\r\n\r\n  const onSubmit = async (values) => {\r\n    dispatch(login(values));\r\n    if (!userInfo) {\r\n      return { [FORM_ERROR]: \"Invalid Credentials. Please try again.\" };\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <>\r\n        <div className='flex items-center justify-center min-h-full px-4 py-12 sm:px-6 lg:px-8'>\r\n          <div className='w-full max-w-md space-y-8'>\r\n            <div>\r\n              <img\r\n                className='w-auto mx-auto transition-all h-14 md:h-16 lg:h-24 hover:animate-spin'\r\n                src='https://media.publit.io/file/noun_vault_3097826-2.svg'\r\n                alt='Workflow'\r\n              />\r\n              <h2 className='mt-6 text-3xl font-semibold text-center text-gray-900 capitalize'>\r\n                Sign in to your account\r\n              </h2>\r\n            </div>\r\n            <Form\r\n              onSubmit={onSubmit}\r\n              validate={(values) => {\r\n                const errors = {};\r\n                if (values.email !== \"undefined\") {\r\n                  var pattern = new RegExp(\r\n                    /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n                  );\r\n\r\n                  if (!pattern.test(values.email)) {\r\n                    errors.email = \"Please enter valid email address.\";\r\n                  }\r\n                }\r\n\r\n                return errors;\r\n              }}\r\n              render={({ handleSubmit, form, submitError }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className='p-4 space-y-8 bg-white border-2 border-gray-100 divide-y divide-gray-200 rounded-md shadow-lg sm:space-y-5'>\r\n                    <div>\r\n                      <div className=''>\r\n                        <Field\r\n                          name='email'\r\n                          component='input'\r\n                          placeholder='Email address'\r\n                          validate={required}>\r\n                          {({ input, meta, placeholder }) => (\r\n                            <div>\r\n                              <div className='flex'>\r\n                                <input\r\n                                  {...input}\r\n                                  placeholder={placeholder}\r\n                                  className='relative block w-full px-3 py-2 text-gray-900 placeholder-gray-500 border border-gray-300 rounded-none appearance-none rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"'\r\n                                />\r\n                              </div>\r\n                              {meta.error && meta.touched && (\r\n                                <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                  <div className='flex'>\r\n                                    <div className='flex-shrink-0'>\r\n                                      <XCircleIcon\r\n                                        className='w-5 h-5 text-red-400'\r\n                                        aria-hidden='true'\r\n                                      />\r\n                                    </div>\r\n                                    <div className='ml-3'>\r\n                                      <h3 className='text-sm font-medium text-red-800'>\r\n                                        {meta.error}\r\n                                      </h3>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </Field>\r\n                        <Field\r\n                          name='password'\r\n                          type='password'\r\n                          component='input'\r\n                          validate={required}\r\n                          placeholder='Password'>\r\n                          {({ input, meta, placeholder }) => (\r\n                            <div>\r\n                              <div className='flex'>\r\n                                <input\r\n                                  {...input}\r\n                                  placeholder={placeholder}\r\n                                  className='relative block w-full px-3 py-2 text-gray-900 placeholder-gray-500 border border-gray-300 rounded-none appearance-none rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\r\n                                />\r\n                              </div>\r\n                              {meta.error && meta.touched && (\r\n                                <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                  <div className='flex'>\r\n                                    <div className='flex-shrink-0'>\r\n                                      <XCircleIcon\r\n                                        className='w-5 h-5 text-red-400'\r\n                                        aria-hidden='true'\r\n                                      />\r\n                                    </div>\r\n                                    <div className='ml-3'>\r\n                                      <h3 className='text-sm font-medium text-red-800'>\r\n                                        {meta.error}\r\n                                      </h3>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </Field>\r\n                        {submitError && (\r\n                          <div className='p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md bg-red-50'>\r\n                            <div className='flex'>\r\n                              <div className='flex-shrink-0'>\r\n                                <XCircleIcon\r\n                                  className='w-5 h-5 text-red-400'\r\n                                  aria-hidden='true'\r\n                                />\r\n                              </div>\r\n                              <div className='ml-3'>\r\n                                <h3 className='text-sm font-medium text-red-800'>\r\n                                  {submitError}\r\n                                </h3>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <button\r\n                        type='submit'\r\n                        className='relative flex justify-center w-full px-4 py-2 text-sm font-medium text-white bg-yellow-500 border border-transparent rounded-md group hover:bg-yellow-600 transistion focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                        <span className='absolute inset-y-0 left-0 flex items-center pl-3'>\r\n                          <LockClosedIcon\r\n                            className='w-5 h-5 text-indigo-500 group-hover:text-indigo-400'\r\n                            aria-hidden='true'\r\n                          />\r\n                        </span>\r\n                        Sign in\r\n                      </button>\r\n                    </div>\r\n                    <div className='flex items-center justify-between pt-1'>\r\n                      <div className='text-sm'>\r\n                        New user?\r\n                        <Link\r\n                          to='/register'\r\n                          className='pl-1 font-medium text-yellow-600 hover:text-blue-500'>\r\n                          Register\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","/** @format */\r\n\r\nimport React, { useEffect } from \"react\";\r\n\r\n//Hero Icons\r\nimport { LockClosedIcon } from \"@heroicons/react/solid\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register } from \"../../actions/userActions\";\r\n\r\n//Final Form\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport { XCircleIcon } from \"@heroicons/react/solid\";\r\n\r\nconst required = (value) => (value ? undefined : \"Required\");\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userRegister = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(\"/dashboard\");\r\n    }\r\n  }, [history, userInfo, navigate]);\r\n\r\n  const onSubmit = async (values) => {\r\n    if (values.password !== values.password2) {\r\n      return { [FORM_ERROR]: \"Password does not match\" };\r\n    } else {\r\n      dispatch(register(values));\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <>\r\n        <div className='flex items-center justify-center min-h-full px-4 py-12 sm:px-6 lg:px-8'>\r\n          <div className='w-full max-w-md space-y-8'>\r\n            <div>\r\n              <img\r\n                className='w-auto h-24 mx-auto transition-all hover:animate-spin'\r\n                src='https://media.publit.io/file/noun_vault_3097826-2.svg'\r\n                alt='Workflow'\r\n              />\r\n              <h2 className='mt-6 text-3xl font-semibold text-center text-gray-900 capitalize'>\r\n                Register\r\n              </h2>\r\n            </div>\r\n            <Form\r\n              onSubmit={onSubmit}\r\n              validate={(values) => {\r\n                const errors = {};\r\n                if (values.email !== \"undefined\") {\r\n                  var pattern = new RegExp(\r\n                    /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n                  );\r\n\r\n                  if (!pattern.test(values.email)) {\r\n                    errors.email = \"Please enter valid email address.\";\r\n                  }\r\n                }\r\n\r\n                if (values.password1 && values.password1.length < 6) {\r\n                  errors.password = \"Please enter 6 characters or more.\";\r\n                }\r\n\r\n                if (values.password2 && values.password2.length < 6) {\r\n                  errors.password2 = \"Please enter 6 characters or more.\";\r\n                }\r\n\r\n                return errors;\r\n              }}\r\n              render={({ handleSubmit, form, submitError }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className='p-4 space-y-8 bg-white border-2 border-gray-100 divide-y divide-gray-200 rounded-md shadow-lg sm:space-y-5'>\r\n                    <div>\r\n                      <div className=''>\r\n                        <Field\r\n                          name='name'\r\n                          component='input'\r\n                          placeholder='Name'\r\n                          validate={required}>\r\n                          {({ input, meta, placeholder }) => (\r\n                            <div>\r\n                              <div className='flex'>\r\n                                <input\r\n                                  {...input}\r\n                                  placeholder={placeholder}\r\n                                  className='relative block w-full px-3 py-2 text-gray-900 placeholder-gray-500 border border-gray-300 rounded-none appearance-none rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\r\n                                />\r\n                              </div>\r\n                              {meta.error && meta.touched && (\r\n                                <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                  <div className='flex'>\r\n                                    <div className='flex-shrink-0'>\r\n                                      <XCircleIcon\r\n                                        className='w-5 h-5 text-red-400'\r\n                                        aria-hidden='true'\r\n                                      />\r\n                                    </div>\r\n                                    <div className='ml-3'>\r\n                                      <h3 className='text-sm font-medium text-red-800'>\r\n                                        {meta.error}\r\n                                      </h3>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </Field>\r\n                        <Field\r\n                          type='email'\r\n                          name='email'\r\n                          component='input'\r\n                          placeholder='Email address'\r\n                          validate={required}>\r\n                          {({ input, meta, placeholder }) => (\r\n                            <div>\r\n                              <div className='flex'>\r\n                                <input\r\n                                  {...input}\r\n                                  placeholder={placeholder}\r\n                                  className='relative block w-full px-3 py-2 text-gray-900 placeholder-gray-500 border border-gray-300 rounded-none appearance-none focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\r\n                                />\r\n                              </div>\r\n                              {meta.error && meta.touched && (\r\n                                <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                  <div className='flex'>\r\n                                    <div className='flex-shrink-0'>\r\n                                      <XCircleIcon\r\n                                        className='w-5 h-5 text-red-400'\r\n                                        aria-hidden='true'\r\n                                      />\r\n                                    </div>\r\n                                    <div className='ml-3'>\r\n                                      <h3 className='text-sm font-medium text-red-800'>\r\n                                        {meta.error}\r\n                                      </h3>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </Field>\r\n                        <Field\r\n                          name='password'\r\n                          type='password'\r\n                          component='input'\r\n                          validate={required}\r\n                          placeholder='Password'>\r\n                          {({ input, meta, placeholder }) => (\r\n                            <div>\r\n                              <div className='flex'>\r\n                                <input\r\n                                  {...input}\r\n                                  placeholder={placeholder}\r\n                                  className='relative block w-full px-3 py-2 text-gray-900 placeholder-gray-500 border border-gray-300 rounded-none appearance-none focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\r\n                                />\r\n                              </div>\r\n                              {meta.error && meta.touched && (\r\n                                <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                  <div className='flex'>\r\n                                    <div className='flex-shrink-0'>\r\n                                      <XCircleIcon\r\n                                        className='w-5 h-5 text-red-400'\r\n                                        aria-hidden='true'\r\n                                      />\r\n                                    </div>\r\n                                    <div className='ml-3'>\r\n                                      <h3 className='text-sm font-medium text-red-800'>\r\n                                        {meta.error}\r\n                                      </h3>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </Field>\r\n                        <Field\r\n                          name='password2'\r\n                          type='password'\r\n                          component='input'\r\n                          validate={required}\r\n                          placeholder='Confirm Password'>\r\n                          {({ input, meta, placeholder }) => (\r\n                            <div>\r\n                              <div className='flex'>\r\n                                <input\r\n                                  {...input}\r\n                                  placeholder={placeholder}\r\n                                  className='relative block w-full px-3 py-2 text-gray-900 placeholder-gray-500 border border-gray-300 rounded-none appearance-none rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\r\n                                />\r\n                              </div>\r\n                              {meta.error && meta.touched && (\r\n                                <div className='col-span-6 p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md sm:col-span-3 bg-red-50'>\r\n                                  <div className='flex'>\r\n                                    <div className='flex-shrink-0'>\r\n                                      <XCircleIcon\r\n                                        className='w-5 h-5 text-red-400'\r\n                                        aria-hidden='true'\r\n                                      />\r\n                                    </div>\r\n                                    <div className='ml-3'>\r\n                                      <h3 className='text-sm font-medium text-red-800'>\r\n                                        {meta.error}\r\n                                      </h3>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </Field>\r\n                        {submitError && (\r\n                          <div className='p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md bg-red-50'>\r\n                            <div className='flex'>\r\n                              <div className='flex-shrink-0'>\r\n                                <XCircleIcon\r\n                                  className='w-5 h-5 text-red-400'\r\n                                  aria-hidden='true'\r\n                                />\r\n                              </div>\r\n                              <div className='ml-3'>\r\n                                <h3 className='text-sm font-medium text-red-800'>\r\n                                  {submitError}\r\n                                </h3>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <button\r\n                        type='submit'\r\n                        className='relative flex justify-center w-full px-4 py-2 text-sm font-medium text-white bg-yellow-500 border border-transparent rounded-md group hover:bg-yellow-600 transistion focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                        <span className='absolute inset-y-0 left-0 flex items-center pl-3'>\r\n                          <LockClosedIcon\r\n                            className='w-5 h-5 text-indigo-500 group-hover:text-indigo-400'\r\n                            aria-hidden='true'\r\n                          />\r\n                        </span>\r\n                        Register\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <>\r\n      <div className='flex flex-col min-h-full pt-16 pb-12 bg-white'>\r\n        <main className='flex flex-col justify-center flex-grow w-full px-4 mx-auto max-w-7xl sm:px-6 lg:px-8'>\r\n          <div className='flex justify-center flex-shrink-0'>\r\n            <a href='/' className='inline-flex'>\r\n              <span className='sr-only'>Workflow</span>\r\n              <img\r\n                className='w-auto h-12'\r\n                src='https://tailwindui.com/img/logos/workflow-mark.svg?color=indigo&shade=600'\r\n                alt=''\r\n              />\r\n            </a>\r\n          </div>\r\n          <div className='py-16'>\r\n            <div className='text-center'>\r\n              <p className='text-sm font-semibold tracking-wide text-indigo-600 uppercase'>\r\n                404 error\r\n              </p>\r\n              <h1 className='mt-2 text-4xl font-extrabold tracking-tight text-gray-900 sm:text-5xl'>\r\n                Page not found.\r\n              </h1>\r\n              <p className='mt-2 text-base text-gray-500'>\r\n                Sorry, we couldn’t find the page you’re looking for.\r\n              </p>\r\n              <div className='mt-6'>\r\n                <Link\r\n                  to='/dashboard'\r\n                  className='text-base font-medium text-indigo-600 hover:text-indigo-500'>\r\n                  Go back home<span aria-hidden='true'> &rarr;</span>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","/** @format */\r\n\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PrivateRoute = () => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  return <div>{userInfo ? <Outlet /> : <Navigate to='/login' />}</div>;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","/** @format */\r\n/* This example requires Tailwind CSS v2.0+ */\r\nimport React, { useEffect, Fragment } from \"react\";\r\nimport { Popover, Transition } from \"@headlessui/react\";\r\nimport { MenuIcon, XIcon } from \"@heroicons/react/outline\";\r\n\r\n//Redux\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nconst LandingScreen = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(\"/dashboard\");\r\n    }\r\n  }, [userInfo, navigate]);\r\n\r\n  return (\r\n    <div className='relative bg-gray-50'>\r\n      <Popover className='relative bg-white shadow'>\r\n        <div className='px-4 mx-auto max-w-7xl sm:px-6'>\r\n          <div className='flex items-center justify-between py-6 md:justify-start md:space-x-10'>\r\n            <div className='flex justify-start lg:w-0 lg:flex-1'>\r\n              <div className='flex items-center flex-shrink-0 px-4'>\r\n                <img\r\n                  className='w-auto h-12 transition-all hover:animate-spin'\r\n                  src='https://media.publit.io/file/noun_vault_3097826-2.svg'\r\n                  alt='PassMan'\r\n                />\r\n                <span className='text-2xl text-gray-500 uppercase '>\r\n                  PassMan\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className='-my-2 -mr-2 md:hidden'>\r\n              <Popover.Button className='inline-flex items-center justify-center p-2 text-gray-400 bg-white rounded-md hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500'>\r\n                <span className='sr-only'>Open menu</span>\r\n                <MenuIcon className='w-6 h-6' aria-hidden='true' />\r\n              </Popover.Button>\r\n            </div>\r\n            <Popover.Group\r\n              as='nav'\r\n              className='hidden space-x-10 md:flex'></Popover.Group>\r\n            <div className='items-center justify-end hidden md:flex md:flex-1 lg:w-0'>\r\n              <Link\r\n                to='/login'\r\n                className='text-base font-medium text-gray-500 whitespace-nowrap hover:text-gray-900'>\r\n                Sign in\r\n              </Link>\r\n              <Link\r\n                to='/register'\r\n                className='inline-flex items-center justify-center px-4 py-2 ml-8 text-base font-medium text-white bg-yellow-600 border border-transparent rounded-md shadow-sm whitespace-nowrap hover:bg-yellow-500'>\r\n                Sign up\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Transition\r\n          as={Fragment}\r\n          enter='duration-200 ease-out'\r\n          enterFrom='opacity-0 scale-95'\r\n          enterTo='opacity-100 scale-100'\r\n          leave='duration-100 ease-in'\r\n          leaveFrom='opacity-100 scale-100'\r\n          leaveTo='opacity-0 scale-95'>\r\n          <Popover.Panel\r\n            focus\r\n            className='absolute inset-x-0 top-0 z-10 p-2 transition origin-top-right transform md:hidden'>\r\n            <div className='bg-white divide-y-2 rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 divide-gray-50'>\r\n              <div className='px-5 pt-5 pb-6'>\r\n                <div className='flex items-center justify-between'>\r\n                  <div className='flex items-center flex-shrink-0 px-4'>\r\n                    <img\r\n                      className='w-auto h-10 transition-all hover:animate-spin'\r\n                      src='https://media.publit.io/file/noun_vault_3097826-2.svg'\r\n                      alt='PassMan'\r\n                    />\r\n                    <span className='text-2xl text-gray-500 uppercase '>\r\n                      PassMan\r\n                    </span>\r\n                  </div>\r\n                  <div className='-mr-2'>\r\n                    <Popover.Button className='inline-flex items-center justify-center p-2 text-gray-400 bg-white rounded-md hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500'>\r\n                      <span className='sr-only'>Close menu</span>\r\n                      <XIcon className='w-6 h-6' aria-hidden='true' />\r\n                    </Popover.Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='px-5 py-6 space-y-6'>\r\n                <div>\r\n                  <Link\r\n                    to='/register'\r\n                    className='flex items-center justify-center w-full px-4 py-2 text-base font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700'>\r\n                    Sign up\r\n                  </Link>\r\n                  <p className='mt-6 text-base font-medium text-center text-gray-500 '>\r\n                    Existing customer?{\" \"}\r\n                    <Link\r\n                      to='login'\r\n                      className='text-indigo-600 hover:text-indigo-500'>\r\n                      Sign in\r\n                    </Link>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Popover.Panel>\r\n        </Transition>\r\n      </Popover>\r\n\r\n      <main className='w-full h-screen lg:relative'>\r\n        <div className='w-full pt-16 pb-20 mx-auto text-center max-w-7xl lg:py-48 lg:text-left'>\r\n          <div className='px-4 lg:w-1/2 sm:px-8 xl:pr-16'>\r\n            <h1 className='text-4xl font-normal tracking-tight text-gray-900 sm:text-5xl md:text-6xl lg:text-5xl xl:text-6xl'>\r\n              <span className='block xl:inline'>\r\n                Secure all of your sensitive data with PassMan.\r\n              </span>{\" \"}\r\n              <span className='block text-yellow-600 font-extralight xl:inline'>\r\n                Safe.Simple.Easy.\r\n              </span>\r\n            </h1>\r\n            <p className='max-w-md mx-auto mt-3 text-lg text-gray-500 sm:text-xl md:mt-5 md:max-w-3xl'>\r\n              Are you ready to experience the Pass life?\r\n            </p>\r\n            <div className='mt-10 sm:flex sm:justify-center lg:justify-start'>\r\n              <div className='rounded-md shadow'>\r\n                <Link\r\n                  to='/register'\r\n                  className='flex items-center justify-center w-full px-8 py-3 text-base font-medium text-white bg-yellow-600 border border-transparent rounded-md hover:bg-yellow-500 md:py-4 md:text-lg md:px-10'>\r\n                  Get started\r\n                </Link>\r\n              </div>\r\n              <div className='mt-3 rounded-md shadow sm:mt-0 sm:ml-3'>\r\n                <a\r\n                  href='https://passmandemo.herokuapp.com/'\r\n                  className='flex items-center justify-center w-full px-8 py-3 text-base font-medium text-blue-600 bg-white border border-transparent rounded-md hover:bg-gray-50 md:py-4 md:text-lg md:px-10'>\r\n                  Live demo\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='relative w-full h-64 sm:h-72 md:h-96 lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2 lg:h-full'>\r\n          <img\r\n            className='absolute inset-0 object-cover w-full h-full'\r\n            src='https://media.publit.io/file/Depositphotos_347145174_L-1.jpg'\r\n            alt=''\r\n          />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingScreen;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { Fragment, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  CalendarIcon,\r\n  ChartBarIcon,\r\n  FolderIcon,\r\n  HomeIcon,\r\n  InboxIcon,\r\n  MenuAlt2Icon,\r\n  UsersIcon,\r\n  XIcon,\r\n} from \"@heroicons/react/outline\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Dialog, Menu, Transition } from \"@headlessui/react\";\r\n\r\nimport { logout } from \"../../actions/userActions\";\r\n\r\nconst userNavigation = [{ name: \"Your Profile\", to: \"/setting\" }];\r\n\r\nconst navigation = [\r\n  { name: \"Dashboard\", href: \"#\", icon: HomeIcon, current: true },\r\n  { name: \"Team\", href: \"#\", icon: UsersIcon, current: false },\r\n  { name: \"Projects\", href: \"#\", icon: FolderIcon, current: false },\r\n  { name: \"Calendar\", href: \"#\", icon: CalendarIcon, current: false },\r\n  { name: \"Documents\", href: \"#\", icon: InboxIcon, current: false },\r\n  { name: \"Reports\", href: \"#\", icon: ChartBarIcon, current: false },\r\n];\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nconst SearchBar = () => {\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  return (\r\n    <div className=''>\r\n      <Transition.Root show={sidebarOpen} as={Fragment}>\r\n        <Dialog\r\n          as='div'\r\n          className='fixed inset-0 z-40 flex md:hidden'\r\n          onClose={setSidebarOpen}>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter='transition-opacity ease-linear duration-300'\r\n            enterFrom='opacity-0'\r\n            enterTo='opacity-100'\r\n            leave='transition-opacity ease-linear duration-300'\r\n            leaveFrom='opacity-100'\r\n            leaveTo='opacity-0'>\r\n            <Dialog.Overlay className='fixed inset-0 bg-gray-600 bg-opacity-75' />\r\n          </Transition.Child>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter='transition ease-in-out duration-300 transform'\r\n            enterFrom='-translate-x-full'\r\n            enterTo='translate-x-0'\r\n            leave='transition ease-in-out duration-300 transform'\r\n            leaveFrom='translate-x-0'\r\n            leaveTo='-translate-x-full'>\r\n            <div className='relative flex flex-col flex-1 w-full max-w-xs pt-5 pb-4 bg-white'>\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter='ease-in-out duration-300'\r\n                enterFrom='opacity-0'\r\n                enterTo='opacity-100'\r\n                leave='ease-in-out duration-300'\r\n                leaveFrom='opacity-100'\r\n                leaveTo='opacity-0'>\r\n                <div className='absolute top-0 right-0 pt-2 -mr-12'>\r\n                  <button\r\n                    type='button'\r\n                    className='flex items-center justify-center w-10 h-10 ml-1 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white'\r\n                    onClick={() => setSidebarOpen(false)}>\r\n                    <span className='sr-only'>Close sidebar</span>\r\n                    <XIcon className='w-6 h-6 text-white' aria-hidden='true' />\r\n                  </button>\r\n                </div>\r\n              </Transition.Child>\r\n              <div className='flex items-center flex-shrink-0 px-4'>\r\n                <img\r\n                  className='w-auto h-8'\r\n                  src='https://tailwindui.com/img/logos/workflow-logo-indigo-600-mark-gray-800-text.svg'\r\n                  alt='Workflow'\r\n                />\r\n              </div>\r\n              <div className='flex-1 h-0 mt-5 overflow-y-auto'>\r\n                <nav className='px-2 space-y-1'>\r\n                  {navigation.map((item) => (\r\n                    <a\r\n                      key={item.name}\r\n                      href={item.href}\r\n                      className={classNames(\r\n                        item.current\r\n                          ? \"bg-gray-100 text-gray-900\"\r\n                          : \"text-gray-600 hover:bg-gray-50 hover:text-gray-900\",\r\n                        \"group flex items-center px-2 py-2 text-base font-medium rounded-md\"\r\n                      )}>\r\n                      <item.icon\r\n                        className={classNames(\r\n                          item.current\r\n                            ? \"text-gray-500\"\r\n                            : \"text-gray-400 group-hover:text-gray-500\",\r\n                          \"mr-4 flex-shrink-0 h-6 w-6\"\r\n                        )}\r\n                        aria-hidden='true'\r\n                      />\r\n                      {item.name}\r\n                    </a>\r\n                  ))}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n          <div className='flex-shrink-0 w-14' aria-hidden='true'>\r\n            {/* Dummy element to force sidebar to shrink to fit close icon */}\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n      <div className='relative z-10 flex flex-shrink-0 h-16 bg-white shadow'>\r\n        <button\r\n          type='button'\r\n          className='px-4 text-gray-500 border-r border-gray-200 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500 md:hidden'\r\n          onClick={() => setSidebarOpen(true)}>\r\n          <span className='sr-only'>Open sidebar</span>\r\n          <MenuAlt2Icon className='w-6 h-6' aria-hidden='true' />\r\n        </button>\r\n        <div className='flex justify-end flex-1 px-4'>\r\n          <div className='flex items-center ml-4 md:ml-6'>\r\n            {userInfo.name}\r\n            {/* Profile dropdown */}\r\n            <Menu as='div' className='relative ml-3'>\r\n              <div>\r\n                <Menu.Button className='flex items-center max-w-xs text-sm bg-white rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                  <span className='sr-only'>Open user menu</span>\r\n                  <img\r\n                    className='w-8 h-8 rounded-full'\r\n                    src='https://images.unsplash.com/photo-1598013924228-f336656b163c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1746&q=80&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'\r\n                    alt=''\r\n                  />\r\n                </Menu.Button>\r\n              </div>\r\n              <Transition\r\n                as={Fragment}\r\n                enter='transition ease-out duration-100'\r\n                enterFrom='transform opacity-0 scale-95'\r\n                enterTo='transform opacity-100 scale-100'\r\n                leave='transition ease-in duration-75'\r\n                leaveFrom='transform opacity-100 scale-100'\r\n                leaveTo='transform opacity-0 scale-95'>\r\n                <Menu.Items className='absolute right-0 w-48 py-1 mt-2 origin-top-right bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none'>\r\n                  {userNavigation.map((item) => (\r\n                    <Menu.Item key={item.name}>\r\n                      {({ active }) => (\r\n                        <Link\r\n                          to={item.to}\r\n                          className={classNames(\r\n                            active ? \"bg-gray-100\" : \"\",\r\n                            \"block px-4 py-2 text-sm text-gray-700\"\r\n                          )}>\r\n                          {item.name}\r\n                        </Link>\r\n                      )}\r\n                    </Menu.Item>\r\n                  ))}\r\n                  <Menu.Item>\r\n                    {({ active }) => (\r\n                      <span\r\n                        onClick={logoutHandler}\r\n                        className={classNames(\r\n                          active ? \"bg-gray-100\" : \"\",\r\n                          \"block px-4 py-2 text-sm text-gray-700\"\r\n                        )}>\r\n                        Log Out\r\n                      </span>\r\n                    )}\r\n                  </Menu.Item>\r\n                </Menu.Items>\r\n              </Transition>\r\n            </Menu>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","/** @format */\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { getUserDetails, updateUserProfile } from \"../../actions/userActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../../constants/userConstants\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n//Final Form\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { UserCircleIcon } from \"@heroicons/react/outline\";\r\n\r\nconst navigation = [\r\n  { name: \"Account\", href: \"\", icon: UserCircleIcon, current: true },\r\n];\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nconst SettingContent = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n      } else {\r\n      }\r\n    }\r\n  }, [dispatch, userInfo, user, success, navigate]);\r\n\r\n  let formData = {\r\n    name: user.name,\r\n    email: user.email,\r\n  };\r\n  const onSubmit = (values) => {\r\n    dispatch(updateUserProfile({ id: user._id, values }));\r\n  };\r\n\r\n  return (\r\n    <div className='lg:grid lg:grid-cols-12 lg:gap-x-5'>\r\n      <aside className='px-2 py-6 sm:px-6 lg:py-0 lg:px-0 lg:col-span-3'>\r\n        <nav className='space-y-1'>\r\n          {navigation.map((item) => (\r\n            <a\r\n              key={item.name}\r\n              href={item.href}\r\n              className={classNames(\r\n                item.current\r\n                  ? \"bg-gray-50 text-indigo-700 hover:text-indigo-700 hover:bg-white\"\r\n                  : \"text-gray-900 hover:text-gray-900 hover:bg-gray-50\",\r\n                \"group rounded-md px-3 py-2 flex items-center text-sm font-medium\"\r\n              )}\r\n              aria-current={item.current ? \"page\" : undefined}>\r\n              <item.icon\r\n                className={classNames(\r\n                  item.current\r\n                    ? \"text-indigo-500 group-hover:text-indigo-500\"\r\n                    : \"text-gray-400 group-hover:text-gray-500\",\r\n                  \"flex-shrink-0 -ml-1 mr-3 h-6 w-6\"\r\n                )}\r\n                aria-hidden='true'\r\n              />\r\n              <span className='truncate'>{item.name}</span>\r\n            </a>\r\n          ))}\r\n        </nav>\r\n      </aside>\r\n\r\n      <div className='space-y-6 sm:px-6 lg:px-0 lg:col-span-9'>\r\n        <div>\r\n          <div className='shadow sm:rounded-md sm:overflow-hidden'>\r\n            <div className='px-4 py-6 space-y-6 bg-white sm:p-6'>\r\n              <div>\r\n                <h3 className='text-lg font-medium leading-6 text-gray-900'>\r\n                  Profile\r\n                </h3>\r\n                <p className='mt-1 text-sm text-gray-500'>Edit profile here.</p>\r\n              </div>\r\n\r\n              <div className='grid grid-cols-3 gap-6'>\r\n                <div className='col-span-3'>\r\n                  <label className='block text-sm font-medium text-gray-700'>\r\n                    Photo\r\n                  </label>\r\n                  <div className='flex items-center mt-1'>\r\n                    <span className='inline-block w-12 h-12 overflow-hidden bg-gray-100 rounded-full'>\r\n                      <svg\r\n                        className='w-full h-full text-gray-300'\r\n                        fill='currentColor'\r\n                        viewBox='0 0 24 24'>\r\n                        <path d='M24 20.993V24H0v-2.996A14.977 14.977 0 0112.004 15c4.904 0 9.26 2.354 11.996 5.993zM16.002 8.999a4 4 0 11-8 0 4 4 0 018 0z' />\r\n                      </svg>\r\n                    </span>\r\n                    <button\r\n                      type='button'\r\n                      className='px-3 py-2 ml-5 text-sm font-medium leading-4 text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                      Change\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Form\r\n              onSubmit={onSubmit}\r\n              initialValues={{\r\n                ...formData,\r\n              }}\r\n              render={({ handleSubmit, submitError }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className='border-t-2 shadow sm:overflow-hidden'>\r\n                    <div className='px-4 py-6 space-y-6 bg-white sm:p-6'>\r\n                      <div className='grid grid-cols-4 gap-6 '>\r\n                        <Field\r\n                          name='name'\r\n                          component='input'\r\n                          placeholder='Enter First Name'>\r\n                          {({ input, placeholder }) => (\r\n                            <div className='col-span-6 sm:col-span-3'>\r\n                              <div>\r\n                                <label\r\n                                  htmlFor='first-name'\r\n                                  className='block text-sm font-medium text-gray-700'>\r\n                                  Name\r\n                                </label>\r\n                                <input\r\n                                  type='text'\r\n                                  {...input}\r\n                                  placeholder={placeholder}\r\n                                  className='block w-full px-3 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </Field>\r\n                        <Field\r\n                          name='email'\r\n                          component='input'\r\n                          placeholder='Enter First Name'>\r\n                          {({ input, placeholder }) => (\r\n                            <div className='col-span-6 sm:col-span-3'>\r\n                              <div>\r\n                                <label\r\n                                  htmlFor='first-name'\r\n                                  className='block text-sm font-medium text-gray-700'>\r\n                                  Email\r\n                                </label>\r\n                                <input\r\n                                  type='text'\r\n                                  {...input}\r\n                                  placeholder={placeholder}\r\n                                  className='block w-full px-3 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </Field>\r\n                        <Field\r\n                          name='password'\r\n                          component='input'\r\n                          placeholder='Enter New Password'>\r\n                          {({ input, placeholder }) => (\r\n                            <div className='col-span-6 sm:col-span-4'>\r\n                              <div>\r\n                                <label\r\n                                  htmlFor='first-name'\r\n                                  className='block text-sm font-medium text-gray-700'>\r\n                                  Password\r\n                                </label>\r\n                                <input\r\n                                  type='text'\r\n                                  {...input}\r\n                                  placeholder={placeholder}\r\n                                  className='block w-full px-3 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </Field>\r\n                        <Field\r\n                          name='passwordConfirm'\r\n                          component='input'\r\n                          placeholder='Re-enter New Password'>\r\n                          {({ input, placeholder }) => (\r\n                            <div className='col-span-6 sm:col-span-4'>\r\n                              <div>\r\n                                <label\r\n                                  htmlFor='first-name'\r\n                                  className='block text-sm font-medium text-gray-700'>\r\n                                  Confirm Password\r\n                                </label>\r\n                                <input\r\n                                  type='text'\r\n                                  {...input}\r\n                                  placeholder={placeholder}\r\n                                  className='block w-full px-3 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='px-4 py-3 text-right bg-gray-50 sm:px-6'>\r\n                    <button\r\n                      type='submit'\r\n                      className='inline-flex justify-center px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='shadow sm:rounded-md sm:overflow-hidden'>\r\n          <div className='px-4 py-6 mb-2 space-y-6 bg-white sm:p-6'>\r\n            <div>\r\n              <h3 className='text-lg font-medium leading-6 text-gray-900'>\r\n                Account Actions\r\n              </h3>\r\n              <p className='mt-1 text-sm text-gray-500'>\r\n                Once you delete the account, it can never be recovered.\r\n              </p>\r\n            </div>\r\n\r\n            <div className='flex justify-end'>\r\n              <div>\r\n                <button\r\n                  type='submit'\r\n                  className='inline-flex justify-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-transparent border-gray-500 rounded-md shadow-sm hover:text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600'>\r\n                  Delete Account\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingContent;\r\n","/** @format */\r\nimport React from \"react\";\r\n\r\nimport SettingBar from \"../navbar/SettingBar\";\r\nimport Sidebar from \"../navbar/Sidebar\";\r\nimport SettingContent from \"../content/SettingContent\";\r\n\r\nexport default function SettingScreen() {\r\n  return (\r\n    <div>\r\n      <div className='relative flex flex-1 h-screen overflow-auto bg-gray-100'>\r\n        <Sidebar />\r\n        <div className='flex flex-col flex-1 w-0 overflow-auto'>\r\n          <SettingBar />\r\n          <div className='mx-auto md:py-2 lg:py-4 max-w-7xl sm:px-6 lg:px-8'>\r\n            <div className='max-w-3xl mx-auto '>\r\n              <SettingContent />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\n\r\nconst Title = (props) => {\r\n  return (\r\n    <div className='relative mt-2 '>\r\n      <div className='absolute inset-0 flex items-center' aria-hidden='true'>\r\n        <div className='w-full border-t border-blue-300' />\r\n      </div>\r\n      <div className='relative flex justify-start'>\r\n        <span className='py-1 pl-1 pr-3 text-sm font-medium bg-blue-500 rounded-md md:text-md lg:text-lg text-gray-50'>\r\n          {props.title}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","/** @format */\r\n/** @format */\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Sidebar from \"../navbar/Sidebar\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  TrashIcon,\r\n  PencilIcon,\r\n  ChevronDoubleUpIcon,\r\n  ArrowNarrowLeftIcon,\r\n} from \"@heroicons/react/outline\";\r\n//algoliasearch\r\nimport algoliasearch from \"algoliasearch\";\r\nimport { InstantSearch, SearchBox, Hits, Index } from \"react-instantsearch-dom\";\r\nimport axios from \"axios\";\r\nimport Title from \"../misc/Title\";\r\n\r\nconst searchClient = algoliasearch(\r\n  \"51L3TF5D2J\",\r\n  \"b83bce23652e1fc9111bb1b4859cb712\"\r\n);\r\nconst passwordIndex = searchClient.initIndex(\"passwordsMERN\");\r\nconst noteIndex = searchClient.initIndex(\"notesMERN\");\r\n\r\nconst SearchScreen = () => {\r\n  const [passwords, setPasswords] = useState([]);\r\n  const [notes, setNotes] = useState([]);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  //Retreive Passwords from API\r\n  useEffect(() => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const fetchPasswords = async () => {\r\n      const { data } = await axios.get(\"/api/passwords\", config);\r\n      data.forEach((password) => {\r\n        password.objectID = password._id;\r\n        delete password._id;\r\n      });\r\n      setPasswords(data);\r\n    };\r\n    fetchPasswords();\r\n  }, [userInfo]);\r\n\r\n  //Record Password in Algolia Index\r\n  passwordIndex.saveObjects(passwords);\r\n\r\n  //Retreive Notes from API\r\n  useEffect(() => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const fetchNotes = async () => {\r\n      const { data } = await axios.get(\"/api/notes\", config);\r\n      data.forEach((note) => {\r\n        note.objectID = note._id;\r\n        delete note._id;\r\n      });\r\n      setNotes(data);\r\n    };\r\n    fetchNotes();\r\n  }, [userInfo]);\r\n\r\n  //Record Note in Algolia Index\r\n  noteIndex.saveObjects(notes);\r\n\r\n  return (\r\n    <div className='relative flex flex-1 h-screen overflow-hidden bg-gray-100'>\r\n      <Sidebar />\r\n\r\n      <div className='flex flex-col flex-1 w-0 overflow-auto'>\r\n        <InstantSearch indexName='passwordsMERN' searchClient={searchClient}>\r\n          <div className='app'>\r\n            <div className=''>\r\n              <div className='flex'>\r\n                <Link\r\n                  to='/'\r\n                  className='inline-flex items-center px-4 text-gray-500 transition duration-200 ease-in transform border-r border-gray-200 shadow-lg focus:shadow-inner rounded-l-md focus:outline-none md:hidden'>\r\n                  <ArrowNarrowLeftIcon\r\n                    className='items-center w-6 h-6'\r\n                    aria-hidden='true'\r\n                  />\r\n                </Link>\r\n                <SearchBox\r\n                  className='w-full '\r\n                  autoFocus\r\n                  translations={{\r\n                    placeholder: \"Search Everything\",\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='px-4 mx-auto max-w-7xl sm:px-6 lg:px-8'>\r\n                <div className='max-w-5xl mx-auto'>\r\n                  <Title title='Passwords' />\r\n                  <Index indexName='passwordsMERN'>\r\n                    <Hits hitComponent={allPasswords} />\r\n                  </Index>\r\n                  <Title title='Notes' />\r\n                  <Index indexName='notesMERN'>\r\n                    <Hits hitComponent={allNotes} />\r\n                  </Index>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </InstantSearch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction allPasswords({ hit }) {\r\n  return (\r\n    <ul className='grid grid-cols-1 gap-5 mt-3 mb-3 overflow-auto sm:gap-6 group'>\r\n      <div className='border-r-4 rounded-md hover:border-yellow-400'>\r\n        <li className='flex col-span-1 rounded-md shadow-sm'>\r\n          <img\r\n            alt='logo '\r\n            src={`https://logo.clearbit.com/${hit.url}`}\r\n            onError={(e) => {\r\n              e.target.onerror = null;\r\n              e.target.src =\r\n                \"https://media.publit.io/file/MiscPasswordIcon.svg\";\r\n            }}\r\n            className='flex items-center flex-shrink-0 object-contain text-sm font-medium text-white shadow-sm w-14 rounded-l-md'\r\n          />\r\n\r\n          <div className='flex flex-row-reverse items-center flex-1 truncate bg-white border-t border-b border-r border-gray-200 rounded-r-md'>\r\n            <div className='flex-1 px-4 py-2 text-sm truncate'>\r\n              <a\r\n                href={hit.href}\r\n                className='font-medium text-gray-900 hover:text-gray-600'>\r\n                {hit.username}\r\n              </a>\r\n              <p className='text-gray-500 '>{hit.url}</p>\r\n            </div>\r\n            <div className='absolute flex-shrink-0 m-2 transform scale-0 group-hover:scale-100 '>\r\n              <a\r\n                href={`https://${hit.url}`}\r\n                className='inline-flex items-center justify-center w-8 h-8 mr-1 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\r\n                <ChevronDoubleUpIcon\r\n                  className='w-5 h-5 text-gray-400 rounded hover:bg-blue-700 hover:text-gray-100'\r\n                  aria-hidden='true'\r\n                />\r\n              </a>\r\n              <Link\r\n                to={`/password/${hit.objectID}/edit`}\r\n                type='button'\r\n                className='inline-flex items-center justify-center w-8 h-8 mr-1 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\r\n                <PencilIcon\r\n                  className='w-5 h-5 text-gray-400 rounded hover:bg-gray-800 hover:text-gray-100'\r\n                  aria-hidden='true'\r\n                />\r\n              </Link>\r\n              <Link\r\n                to={`/password/${hit.objectID}/delete`}\r\n                type='button'\r\n                className='inline-flex items-center justify-center w-8 h-8 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\r\n                <TrashIcon\r\n                  className='w-5 h-5 text-gray-400 rounded hover:bg-red-600 hover:text-gray-100'\r\n                  aria-hidden='true'\r\n                />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction allNotes({ hit }) {\r\n  return (\r\n    <ul className='grid grid-cols-1 gap-5 mt-3 mb-3 overflow-auto sm:gap-6 group'>\r\n      <div className='border-r-4 rounded-md hover:border-yellow-400'>\r\n        <li className='flex col-span-1 border-4 rounded-md shadow-sm border-gray-50'>\r\n          <img\r\n            alt='logo'\r\n            src='https://media.publit.io/file/noun-triangle.svg'\r\n            className='flex items-center flex-shrink-0 object-contain text-sm font-medium text-white shadow-sm w-14 rounded-l-md' //media.publit.io/file/triangle/orangeTriangle.svg\",\"\r\n          />\r\n\r\n          <div className='flex flex-row-reverse items-center flex-1 truncate bg-white border-t border-b border-r border-blue-200 rounded-r-md'>\r\n            <div className='flex-1 px-4 py-2 text-sm truncate'>\r\n              {hit.title}\r\n              <p className='text-gray-500 truncate h-11 '>{hit.caption}</p>\r\n            </div>\r\n            <div className='absolute flex-shrink-0 m-2 transform scale-0 group-hover:scale-100 '>\r\n              <Link\r\n                to={`/note/${hit.objectID}/edit`}\r\n                type='button'\r\n                className='inline-flex items-center justify-center w-8 h-8 mr-1 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\r\n                <PencilIcon\r\n                  className='w-5 h-5 text-gray-400 rounded hover:bg-gray-800 hover:text-gray-100'\r\n                  aria-hidden='true'\r\n                />\r\n              </Link>\r\n              <Link\r\n                to={`/note/${hit.objectID}/delete`}\r\n                type='button'\r\n                className='inline-flex items-center justify-center w-8 h-8 text-gray-400 bg-transparent bg-gray-100 rounded-full hover:text-gray-500 focus:outline-none '>\r\n                <TrashIcon\r\n                  className='w-5 h-5 text-gray-400 rounded hover:bg-red-600 hover:text-gray-100'\r\n                  aria-hidden='true'\r\n                />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default SearchScreen;\r\n","/** @format */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\n\r\nimport DashboardScreen from \"./components/screens/DashboardScreen\";\r\nimport PasswordsScreen from \"./components/screens/PasswordScreen\";\r\nimport NotesScreen from \"./components/screens/NoteScreen\";\r\nimport AddressScreen from \"./components/screens/AddressScreen\";\r\n\r\nimport AddPasswordModal from \"./components/modal/AddPasswordModal\";\r\n\r\nimport EditPasswordModal from \"./components/modal/EditPasswordModal\";\r\nimport DeletePasswordModal from \"./components/modal/DeletePasswordModal\";\r\nimport AddAddressModal from \"./components/modal/AddAddressModal\";\r\n\r\nimport AddNoteModal from \"./components/modal/AddNoteModal\";\r\nimport EditNoteModal from \"./components/modal/EditNoteModal\";\r\nimport DeleteNoteModal from \"./components/modal/DeleteNoteModal\";\r\n\r\nimport LoginScreen from \"./components/screens/LoginScreen\";\r\nimport RegisterScreen from \"./components/screens/RegisterScreen\";\r\nimport NotFoundScreen from \"./components/screens/NotFoundScreen\";\r\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\r\nimport LandingScreen from \"./components/screens/LandingScreen\";\r\nimport SettingScreen from \"./components/screens/SettingScreen\";\r\nimport SearchScreen from \"./components/screens/SearchScreen\";\r\n\r\n//Toastify\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <ToastContainer className='w-4 h-4' autoClose={3500} />\r\n\r\n        <Routes>\r\n          <Route path='/' element={<LandingScreen />} />\r\n          <Route path='/login' element={<LoginScreen />} />\r\n          <Route path='/search' element={<SearchScreen />} />\r\n          <Route path='/register' element={<RegisterScreen />} />\r\n          <Route element={<PrivateRoute />}>\r\n            <Route path='/dashboard' element={<DashboardScreen />} />\r\n            <Route path='/setting' element={<SettingScreen />} />\r\n            {/* //PASSWORD */}\r\n            <Route path='/passwords' element={<PasswordsScreen />} />\r\n            <Route path='/passwords/add' element={<AddPasswordModal />} />\r\n            <Route\r\n              path='/password/:id/delete'\r\n              element={<DeletePasswordModal />}\r\n            />\r\n            <Route path='/password/:id/edit' element={<EditPasswordModal />} />\r\n            {/* //NOTE */}\r\n            <Route path='/notes' element={<NotesScreen />} />\r\n            <Route path='/note/:id/delete' element={<DeleteNoteModal />} />\r\n            <Route path='/note/:id/edit' element={<EditNoteModal />} />\r\n            <Route path='/add/note' element={<AddNoteModal />} />\r\n            <Route path='/addresses' element={<AddressScreen />} />{\" \"}\r\n            <Route path='/add/address' element={<AddAddressModal />} />\r\n          </Route>\r\n          <Route path='*' element={<NotFoundScreen />} />\r\n        </Routes>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/** @format */\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  passwordListReducer,\r\n  passwordCreateReducer,\r\n  passwordDetailsReducer,\r\n  passwordDeleteReducer,\r\n  passwordUpdateReducer,\r\n} from \"./reducers/passwordReducers\";\r\n\r\nimport {\r\n  noteListReducer,\r\n  noteCreateReducer,\r\n  noteDetailsReducer,\r\n  noteDeleteReducer,\r\n  noteUpdateReducer,\r\n} from \"./reducers/noteReducers\";\r\n\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  passwordList: passwordListReducer,\r\n  passwordCreate: passwordCreateReducer,\r\n  passwordDetails: passwordDetailsReducer,\r\n  passwordDelete: passwordDeleteReducer,\r\n  passwordUpdate: passwordUpdateReducer,\r\n  noteList: noteListReducer,\r\n  noteCreate: noteCreateReducer,\r\n  noteDetails: noteDetailsReducer,\r\n  noteDelete: noteDeleteReducer,\r\n  noteUpdate: noteUpdateReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = { userLogin: { userInfo: userInfoFromStorage } };\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","/** @format */\r\nimport {\r\n  PASSWORD_LIST_REQUEST,\r\n  PASSWORD_LIST_SUCCESS,\r\n  PASSWORD_LIST_FAIL,\r\n  PASSWORD_DELETE_REQUEST,\r\n  PASSWORD_DELETE_SUCCESS,\r\n  PASSWORD_DELETE_FAIL,\r\n  PASSWORD_DELETE_RESET,\r\n  PASSWORD_CREATE_REQUEST,\r\n  PASSWORD_CREATE_SUCCESS,\r\n  PASSWORD_CREATE_FAIL,\r\n  PASSWORD_CREATE_RESET,\r\n  PASSWORD_DETAILS_REQUEST,\r\n  PASSWORD_DETAILS_SUCCESS,\r\n  PASSWORD_DETAILS_FAIL,\r\n  PASSWORD_UPDATE_REQUEST,\r\n  PASSWORD_UPDATE_SUCCESS,\r\n  PASSWORD_UPDATE_FAIL,\r\n  PASSWORD_UPDATE_RESET,\r\n} from \"../constants/passwordConstants\";\r\n\r\n// import { PASSWORD_LIST_CLEAR } from \"../constants/passwordConstants\";\r\n\r\n//PASSWORDS\r\n\r\nexport const passwordListReducer = (state = { passwords: [] }, action) => {\r\n  switch (action.type) {\r\n    case PASSWORD_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n        passwords: [],\r\n      };\r\n    case PASSWORD_LIST_SUCCESS:\r\n      return { passwords: action.payload, loading: false };\r\n    case PASSWORD_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const passwordDetailsReducer = (state = { password: {} }, action) => {\r\n  switch (action.type) {\r\n    case PASSWORD_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case PASSWORD_DETAILS_SUCCESS:\r\n      return { loading: false, password: action.payload };\r\n    case PASSWORD_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const passwordDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PASSWORD_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PASSWORD_DELETE_SUCCESS:\r\n      return { loading: false, success: true, state: {} };\r\n    case PASSWORD_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PASSWORD_DELETE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const passwordCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PASSWORD_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PASSWORD_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        password: action.payload,\r\n      };\r\n    case PASSWORD_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PASSWORD_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const passwordUpdateReducer = (state = { password: {} }, action) => {\r\n  switch (action.type) {\r\n    case PASSWORD_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PASSWORD_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, password: action.payload };\r\n    case PASSWORD_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PASSWORD_UPDATE_RESET:\r\n      return { password: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//CLEAR PASSWORD\r\n// export const passwordListClear = (state = { passwords: [] }, action) => {\r\n//   switch (action.type) {\r\n//     case PASSWORD_LIST_CLEAR:\r\n//       return {\r\n//         loading: false,\r\n//         passwords: null,\r\n//       };\r\n//   }\r\n// };\r\n","/** @format */\r\nimport {\r\n  NOTE_LIST_REQUEST,\r\n  NOTE_LIST_SUCCESS,\r\n  NOTE_LIST_FAIL,\r\n  NOTE_DELETE_REQUEST,\r\n  NOTE_DELETE_SUCCESS,\r\n  NOTE_DELETE_FAIL,\r\n  NOTE_DELETE_RESET,\r\n  NOTE_CREATE_REQUEST,\r\n  NOTE_CREATE_SUCCESS,\r\n  NOTE_CREATE_FAIL,\r\n  NOTE_CREATE_RESET,\r\n  NOTE_DETAILS_REQUEST,\r\n  NOTE_DETAILS_SUCCESS,\r\n  NOTE_DETAILS_FAIL,\r\n  NOTE_UPDATE_REQUEST,\r\n  NOTE_UPDATE_SUCCESS,\r\n  NOTE_UPDATE_FAIL,\r\n  NOTE_UPDATE_RESET,\r\n} from \"../constants/noteConstants\";\r\n\r\n//NOTES\r\n\r\nexport const noteListReducer = (state = { notes: [] }, action) => {\r\n  switch (action.type) {\r\n    case NOTE_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n        notes: [],\r\n      };\r\n    case NOTE_LIST_SUCCESS:\r\n      return { notes: action.payload, loading: false };\r\n    case NOTE_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteDetailsReducer = (state = { note: {} }, action) => {\r\n  switch (action.type) {\r\n    case NOTE_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case NOTE_DETAILS_SUCCESS:\r\n      return { loading: false, note: action.payload };\r\n    case NOTE_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTE_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case NOTE_DELETE_SUCCESS:\r\n      return { loading: false, success: true, state: {} };\r\n    case NOTE_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case NOTE_DELETE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTE_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case NOTE_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        note: action.payload,\r\n      };\r\n    case NOTE_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case NOTE_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteUpdateReducer = (state = { note: {} }, action) => {\r\n  switch (action.type) {\r\n    case NOTE_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case NOTE_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, note: action.payload };\r\n    case NOTE_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case NOTE_UPDATE_RESET:\r\n      return { note: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/** @format */\r\n\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\n//REDUX\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}